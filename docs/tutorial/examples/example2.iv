#Inventor V2.1 ascii

# set global parameters like font, material
Font {
    size 0.01
    name "arial"
}

# draw sphere in origin
Sphere { radius 0.01 }

# moving sphere
Separator {
    DEF POS Shuttle {  # animated translation
        translation0 -0.3 0.25 0
        translation1  0.3 0.25 0
        speed 0.2
    }
    Sphere { radius 0.01 }
    Transform { translation 0.02 0 0 }
    Text3 {            # prints x-coordinate next to sphere
        parts FRONT
        string "" = DecomposeVec3f {
            vector 0 0 0 = USE POS.translation
        }.x
    }
} 

# arrow with measurement
Separator { 

    # calculate rotation for arrow from origin to moving sphere
    Transform {        
        rotation = ComposeRotationFromTo {
            from 0 1 0                # up vector
            to = USE POS.translation  # vector from origin to moving sphere
        }.rotation
    }
    
    # cylinder + text
    Separator { 
        Translation {
            translation = DEF CALC Calculator {
                A = USE POS.translation # position of moving sphere
                a 0.02                  # offset for arrowheads
                
                # we will calculate the following things:
                # - oa: distance of moving sphere to origin
                # - ob: length of arrowbody (distance - 2 * offset)
                # - oA: translation from origin to far arrowhead (dist. - offset)
                # - oB: translation from origin to center of arrow
                # - oC: translation from origin to near arrow (offset)
                
                expression "oa = sqrt(A[0]*A[0]+A[1]*A[1]+A[2]*A[2]);ob = oa - 2*a; oA = vec3f(0,oa-a,0);oB = vec3f(0,oa/2,0);oC = vec3f(0,a,0)"

            }.oB # translate to center of arrow
        }
        Cylinder { # slim cylinder for body of arrow
            radius 0.001
            height = USE CALC.ob
        }
        Transform { # offset for label
            translation 0.01 0 0
            rotation 0 0 1 1.57
        }
        Text3 { # label, composed of constant string + length
            parts FRONT
            justification CENTER
            string "" = SoStringCalculator {
                a "length: "
                b = USE CALC.oa
                expression "oa = a + b"
            }.oa
        }            
    }
    
    # the near arrowhead
    Separator { 
        Transform {
            # the ComposeVec3f is for demonstration - we could also just
            # USE CALC.oC for the translation
            translation = ComposeVec3f {
                x 0
                y = USE CALC.a
                z 0
            }.vector 
            rotation 0 0 1 3.1415 # turn around
        }
        DEF ARROW Cone {
            bottomRadius 0.005
            height 0.02
        }
    }
    
    # the far arowhead
    Separator { 
        Translation {
            translation = USE CALC.oA
        }
        USE ARROW
    }
    
}



