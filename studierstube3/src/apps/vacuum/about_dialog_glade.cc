// generated 2003/9/3 3:49:26 GMT by tamer@katakis.(none)
// using glademm V2.0.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /scratch/studierstube/studierstube/src/apps/vacuum/gtk/vacuum.glade
// for gtk 2.2.1 and gtkmm 2.2.5
//
// Please modify the corresponding derived classes in .//about_dialog.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
#include "about_dialog_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/button.h>
#include <gtkmm/buttonbox.h>
#include <gtkmm/textview.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/box.h>

about_dialog_glade::about_dialog_glade(
)
{  
   
   Gtk::Dialog *about_dialog = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::Button *closebutton1 = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-close")));
   Gtk::TextView *textview1 = Gtk::manage(new class Gtk::TextView());
   Gtk::ScrolledWindow *scrolledwindow1 = Gtk::manage(new class Gtk::ScrolledWindow());
   closebutton1->set_flags(Gtk::CAN_FOCUS);
   closebutton1->set_relief(Gtk::RELIEF_NORMAL);
   about_dialog->get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
   textview1->set_flags(Gtk::CAN_FOCUS);
   textview1->set_editable(false);
   textview1->set_cursor_visible(false);
   textview1->set_pixels_above_lines(0);
   textview1->set_pixels_below_lines(0);
   textview1->set_pixels_inside_wrap(0);
   textview1->set_left_margin(0);
   textview1->set_right_margin(0);
   textview1->set_indent(0);
   textview1->set_wrap_mode(Gtk::WRAP_WORD);
   textview1->set_justification(Gtk::JUSTIFY_CENTER);
   textview1->get_buffer()->set_text("\\\\ Studierstube - Vacuum //\n"
		"===================\n"
		"\n"
		"Copyright (C) 2003  \n"
		"Vienna University of Technology\n"
		"Systems in Motion\n"
		"\n"
		"This application has been developed in collaboration with Systems in Motion.\n"
		"\n"
		"It is built on the Studierstube collaborative AR platform and Systems in Motion's SimVoleon and Coin3D libraries.\n"
		"\n"
		"We chose a volumetric rendering application to demonstrate the capabilities of our tool since the users can jointly and interactively examine a shared set of volumetric data, which nicely illustrates the collaborative features of our system and serves as an appealing visualization software in the medical and geological domain.\n"
		"\n"
		"Authors:\n"
		"Istvan Barakonyi\n"
		"Tamer Fahmy\n"
		"Karin Kosina\n"
		"");
   scrolledwindow1->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow1->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow1->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow1->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow1->add(*textview1);
   about_dialog->get_vbox()->set_homogeneous(false);
   about_dialog->get_vbox()->set_spacing(0);
   about_dialog->get_vbox()->pack_start(*scrolledwindow1);
   about_dialog->set_title("About Vacuum");
   about_dialog->set_default_size(320,200);
   about_dialog->set_modal(true);
   about_dialog->property_window_position().set_value(Gtk::WIN_POS_CENTER);
   about_dialog->set_resizable(true);
   about_dialog->property_destroy_with_parent().set_value(true);
   about_dialog->set_has_separator(true);
   about_dialog->add_action_widget(*closebutton1, -7);
   closebutton1->show();
   textview1->show();
   scrolledwindow1->show();
   about_dialog->show();
   closebutton1->signal_clicked().connect(SigC::slot(*this, &Gtk::Widget::hide));
}

about_dialog_glade::~about_dialog_glade()
{  delete gmm_data;
}
