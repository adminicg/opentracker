// generated 2003/9/11 20:59:49 GMT by tamer@katakis.(none)
// using glademm V2.0.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /scratch/studierstube/studierstube/src/apps/vacuum/gtk/vacuum.glade
// for gtk 2.2.1 and gtkmm 2.2.5
//
// Please modify the corresponding derived classes in .//main_window.hh and.//main_window.cc

#ifndef _MAIN_WINDOW_GLADE_HH
#  define _MAIN_WINDOW_GLADE_HH


#if !defined(GLADEMM_DATA)
#define GLADEMM_DATA 
#include <gtkmm/accelgroup.h>

class GlademmData
{  
        
        Glib::RefPtr<Gtk::AccelGroup> accgrp;
public:
        
        GlademmData(Glib::RefPtr<Gtk::AccelGroup> ag) : accgrp(ag)
        {  
        }
        
        Glib::RefPtr<Gtk::AccelGroup>  getAccelGroup()
        {  return accgrp;
        }
};
#endif //GLADEMM_DATA

#include <gtkmm/window.h>
#include <gtkmm/tooltips.h>
#include <gtkmm/menuitem.h>
#include <gtkmm/optionmenu.h>
#include <gtkmm/entry.h>
#include <gtkmm/scale.h>
#include <gtkmm/drawingarea.h>

class main_window_glade : public Gtk::Window
{  
        
        GlademmData *gmm_data;
        Gtk::Tooltips _tooltips;
protected:
        class Gtk::MenuItem *axis;
        class Gtk::MenuItem *interpolation;
        class Gtk::MenuItem *alpha_use;
        class Gtk::MenuItem *clipping_side;
        class Gtk::OptionMenu *colormap_optionmenu;
        class Gtk::OptionMenu *colormaptype_optionmenu;
        class Gtk::HScale *offset_scale;
        class Gtk::HScale *shift_scale;
        class Gtk::DrawingArea *drawingarea;
        
        main_window_glade();
        
        ~main_window_glade();
private:
        virtual void on_open_activate() = 0;
        virtual void on_quit_activate() = 0;
        virtual void on_volume_activate() = 0;
        virtual void on_orthoslice_activate() = 0;
        virtual void on_axis_x_activate() = 0;
        virtual void on_axis_y_activate() = 0;
        virtual void on_axis_z_activate() = 0;
        virtual void on_interpolation_nearest_activate() = 0;
        virtual void on_interpolation_linear_activate() = 0;
        virtual void on_alpha_as_is_activate() = 0;
        virtual void on_alpha_opaque_activate() = 0;
        virtual void on_alpha_binary_activate() = 0;
        virtual void on_clipping_front_activate() = 0;
        virtual void on_clipping_back_activate() = 0;
        virtual void on_about_activate() = 0;
        virtual void on_grey_activate() = 0;
        virtual void on_temperature_activate() = 0;
        virtual void on_physics_activate() = 0;
        virtual void on_standard_activate() = 0;
        virtual void on_glow_activate() = 0;
        virtual void on_blue_red_activate() = 0;
        virtual void on_seismic_activate() = 0;
        virtual void on_alpha_activate() = 0;
        virtual void on_lumalpha_activate() = 0;
        virtual void on_rgba_activate() = 0;
        virtual void on_entry_remap_min_changed() = 0;
        virtual void on_entry_remap_max_changed() = 0;
        virtual void on_offset_scale_value_changed() = 0;
        virtual void on_shift_scale_value_changed() = 0;
        virtual bool on_main_window_delete_event(GdkEventAny *ev) = 0;
public:
        class Gtk::RadioMenuItem *interpolation_nearest;
        class Gtk::RadioMenuItem *alpha_as_is;
        class Gtk::Entry *entry_remap_min;
        class Gtk::Entry *entry_remap_max;
};
#endif
