/* ========================================================================
 * Copyright (C) 2000,2001,2002  Vienna University of Technology
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * For further information please contact Dieter Schmalstieg under
 * <schmalstieg@ims.tuwien.ac.at> or write to Dieter Schmalstieg,
 * Vienna University of Technology, Favoritenstr. 9-11/188, A1040 Vienna,
 * Austria.
 * ========================================================================
 * PROJECT: sman2
 * ======================================================================== */
/**
 * header file for Application data structure class
 *
 * @author Gerhard Reitmayr
 *
 * $Id: Application.h 3427 2004-07-14 12:20:49Z tamer $
 * @file                                                                   */
/* ======================================================================= */

#ifndef _APPLICATION_H_
#define _APPLICATION_H_

#include <string>

/** The class Application is a simple store for all data required to 
 * describe an application instance running somewhere in the distributed
 * system. It stores a unique application id, a name and the address of
 * the DIV multicast group assigned to it. It is referenced by Locale
 * and Host objects to keep track of the relations to them.
 * It uses the DIVAddressFactory to generate its DIV address.
 *
 * @author Gerhard Reitmayr
 * @ingroup sman2
 */
class Application  
{
public:
	Application();
	virtual ~Application();

    /** unique application id. This is unique for the distributed system
     * and is generated by the host starting the application. 
     */
    std::string appId;
    /** an application name. It allows to find an application by a 
     * well-known name.
     */
    std::string name;
    /** IP address of the multicast group assigned to the application
     * for DIV operation.
     */
    std::string divAddress;
    /// port number of the multicast group
    int divPort;
    /** flag to store whether the application is shared between 
     * different hosts. 
     */
    bool isShared;
};

#endif // _APPLICATION_H_
