#Inventor V2.1 ascii

SoClassLoader {
    className "DepthBuffer"
    fileName "smallchange1"
}

DEF NAV SoApplicationKit 
{
    readOnly TRUE
    
   
    classLoader SoClassLoader 
    {
        className "SoNavigationKit"
        fileName "signpost"
    }
    
    contextKit DEF NAV_NAVKIT SoNavigationKit    
    {     
    
        # --- PIP -------------------------------------------------------------

        # PipSheet MyDialog1 (autogenerated by qt2pip.xsl)
        templatePipSheet SoPipSheetKit {
            # pipParts (PIP_BODY|SHEET|SHEET_TABS|SYSTEM_TABS)
            # autoScaling FALSE
            # sheetsRoot So3DSeparator { boundingBoxCheck FALSE eventMask BM_ALL_EVENTS }
            sheets Switch {
             Separator {         # 1. sheet
                                
            # this switch stores reusable button geometry as invisible geometry. it should not be traversed !
            Switch {  whichChild -1
            DEF __OFF_GEOM Separator {    
            ShapeHints {
                vertexOrdering  COUNTERCLOCKWISE
                creaseAngle 1.36136
            }
            Coordinate3 {
                point [ -0.5 -0.5 -0.5,
                        -0.5 0.4 -0.5,
                        0.5 0.4 -0.5,
                        0.5 -0.5 -0.5,
                        -0.5 0.4 0.5,
                        -0.5 -0.5 0.5,
                        0.5 0.4 0.5,
                        0.5 -0.5 0.5,
                        -0.36444 0.5 -0.348644,
                        -0.363032 0.5 0.354509,
                        0.353259 0.5 0.350574,
                        0.354633 0.5 -0.344963,
                        -0.3 0.5 -0.3,
                        -0.3 0.5 0.3,
                        0.3 0.5 0.3,
                        0.3 0.5 -0.3 ]
            }
            TextureCoordinateBinding {value PER_VERTEX}
            TextureCoordinate2 {point [0 0, 0 1, 1 1 , 0 0, 1 1 , 1 0]}
            IndexedFaceSet {
                coordIndex  [ 12, 13, 14, -1, 12, 14, 15, -1 ]
            }
            SoTexture2 {}
            IndexedFaceSet {       
                coordIndex  [ 12, 11, 8, -1, 15, 11, 12, -1,
                      15, 14, 11, -1, 14, 10, 11, -1,
                      14, 9, 10, -1, 13, 9, 14, -1,
                      13, 8, 9, -1, 12, 8, 13, -1,
                      8, 11, 1, -1, 11, 2, 1, -1,
                      11, 10, 2, -1, 10, 6, 2, -1,
                      10, 4, 6, -1, 9, 4, 10, -1,
                      9, 1, 4, -1, 8, 1, 9, -1,
                      7, 5, 3, -1, 5, 0, 3, -1,
                      6, 7, 2, -1, 7, 3, 2, -1,
                      5, 4, 1, -1, 0, 5, 1, -1,
                      6, 5, 7, -1, 4, 5, 6, -1,
                      0, 2, 3, -1, 0, 1, 2, -1 ]
            }    
            }

            DEF __ON_GEOM Separator {
            ShapeHints {
                vertexOrdering  COUNTERCLOCKWISE
                creaseAngle 1.36136
            }
            Coordinate3 {
                point [ -0.5 -0.5 -0.5,
                        -0.5 0.0 -0.5,
                        0.5 0.0 -0.5,
                        0.5 -0.5 -0.5,
                        -0.5 0.0 0.5,
                        -0.5 -0.5 0.5,
                        0.5 0.0 0.5,
                        0.5 -0.5 0.5,
                        -0.36444 0.1 -0.348644,
                        -0.363032 0.1 0.354509,
                        0.353259 0.1 0.350574,
                        0.354633 0.1 -0.344963,
                        -0.3 0.1 -0.3,
                        -0.3 0.1 0.3,
                        0.3 0.1 0.3,
                        0.3 0.1 -0.3 ]
            }
            TextureCoordinateBinding {value PER_VERTEX}
            TextureCoordinate2 {point [0 0, 0 1, 1 1 , 0 0, 1 1 , 1 0]}
            IndexedFaceSet {
                coordIndex  [ 12, 13, 14, -1, 12, 14, 15, -1 ]
            }
            SoTexture2 {}
            IndexedFaceSet {       
                coordIndex  [ 12, 11, 8, -1, 15, 11, 12, -1,
                      15, 14, 11, -1, 14, 10, 11, -1,
                      14, 9, 10, -1, 13, 9, 14, -1,
                      13, 8, 9, -1, 12, 8, 13, -1,
                      8, 11, 1, -1, 11, 2, 1, -1,
                      11, 10, 2, -1, 10, 6, 2, -1,
                      10, 4, 6, -1, 9, 4, 10, -1,
                      9, 1, 4, -1, 8, 1, 9, -1,
                      7, 5, 3, -1, 5, 0, 3, -1,
                      6, 7, 2, -1, 7, 3, 2, -1,
                      5, 4, 1, -1, 0, 5, 1, -1,
                      6, 5, 7, -1, 4, 5, 6, -1,
                      0, 2, 3, -1, 0, 1, 2, -1 ]
            }
            }

          DEF __OFF_HL_GEOM Separator {
           ShapeHints {
                vertexOrdering  COUNTERCLOCKWISE
                creaseAngle 1.36136
            }
            Coordinate3 {
                point [ -0.5 -0.5 -0.5,
                        -0.5 0.4 -0.5,
                        0.5 0.4 -0.5,
                        0.5 -0.5 -0.5,
                        -0.5 0.4 0.5,
                        -0.5 -0.5 0.5,
                        0.5 0.4 0.5,
                        0.5 -0.5 0.5,
                        -0.36444 0.5 -0.348644,
                        -0.363032 0.5 0.354509,
                        0.353259 0.5 0.350574,
                        0.354633 0.5 -0.344963,
                        -0.3 0.5 -0.3,
                        -0.3 0.5 0.3,
                        0.3 0.5 0.3,
                        0.3 0.5 -0.3 ]
            }
            TextureCoordinateBinding {value PER_VERTEX}
            TextureCoordinate2 {point [0 0, 0 1, 1 1 , 0 0, 1 1 , 1 0]}
            IndexedFaceSet {
                coordIndex  [ 12, 13, 14, -1, 12, 14, 15, -1 ]
            }
            SoTexture2 {}
            IndexedFaceSet {       
                coordIndex  [ 12, 11, 8, -1, 15, 11, 12, -1,
                      15, 14, 11, -1, 14, 10, 11, -1,
                      14, 9, 10, -1, 13, 9, 14, -1,
                      13, 8, 9, -1, 12, 8, 13, -1,
                      8, 11, 1, -1, 11, 2, 1, -1,
                      11, 10, 2, -1, 10, 6, 2, -1,
                      10, 4, 6, -1, 9, 4, 10, -1,
                      9, 1, 4, -1, 8, 1, 9, -1,
                      7, 5, 3, -1, 5, 0, 3, -1,
                      6, 7, 2, -1, 7, 3, 2, -1,
                      5, 4, 1, -1, 0, 5, 1, -1,
                      6, 5, 7, -1, 4, 5, 6, -1,
                      0, 2, 3, -1, 0, 1, 2, -1 ]
            }
            }

        DEF __ON_HL_GEOM Separator {
            ShapeHints {
                vertexOrdering  COUNTERCLOCKWISE
                creaseAngle 1.36136
            }
            Coordinate3 {
                point [ -0.5 -0.5 -0.5,
                        -0.5 0.0 -0.5,
                        0.5 0.0 -0.5,
                        0.5 -0.5 -0.5,
                        -0.5 0.0 0.5,
                        -0.5 -0.5 0.5,
                        0.5 0.0 0.5,
                        0.5 -0.5 0.5,
                        -0.36444 0.1 -0.348644,
                        -0.363032 0.1 0.354509,
                        0.353259 0.1 0.350574,
                        0.354633 0.1 -0.344963,
                        -0.3 0.1 -0.3,
                        -0.3 0.1 0.3,
                        0.3 0.1 0.3,
                        0.3 0.1 -0.3 ]
            }
            TextureCoordinateBinding {value PER_VERTEX}
            TextureCoordinate2 {point [0 0, 0 1, 1 1 , 0 0, 1 1 , 1 0]}
            IndexedFaceSet {
                coordIndex  [ 12, 13, 14, -1, 12, 14, 15, -1 ]
            }
            SoTexture2 {}
            IndexedFaceSet {       
                coordIndex  [ 12, 11, 8, -1, 15, 11, 12, -1,
                      15, 14, 11, -1, 14, 10, 11, -1,
                      14, 9, 10, -1, 13, 9, 14, -1,
                      13, 8, 9, -1, 12, 8, 13, -1,
                      8, 11, 1, -1, 11, 2, 1, -1,
                      11, 10, 2, -1, 10, 6, 2, -1,
                      10, 4, 6, -1, 9, 4, 10, -1,
                      9, 1, 4, -1, 8, 1, 9, -1,
                      7, 5, 3, -1, 5, 0, 3, -1,
                      6, 7, 2, -1, 7, 3, 2, -1,
                      5, 4, 1, -1, 0, 5, 1, -1,
                      6, 5, 7, -1, 4, 5, 6, -1,
                      0, 2, 3, -1, 0, 1, 2, -1 ]
            }
            }
            }
            
            RotationXYZ {axis  X angle 1.57 }
            
            Separator {                 # SoListBox ROOMLISTBOX
                Transform { translation 0.477272727272727 0 0.295454545454545 } 
                DEF ROOMLISTBOX SoListBox {
                    width 0.928030303030303
                    height 0.1
                    depth 0.568181818181818
                numButtons     5     # set correct number of buttons here !
                spacing        0.046401515151515  # your desired spacing
                navButtonWidth 0.139204545454545   # the width of the navigation buttons
                multipleSelections FALSE
                }
            }
            }
              Separator {          # next sheet
                RotationXYZ {axis  X angle 1.57 }
            Separator {                 # SoToggleButton HUDVISIBLE
                Transform { translation 0.473484848484849 0 0.076704545454545 } 
                DEF HUDVISIBLE SoToggleButton {
                    width 0.909090909090909
                    height 0.1
                    depth 0.115530303030303
                    
                    offGeometry Separator {
                        USE __OFF_GEOM
                        Transform { translation 0 0.501 0.25 rotation 1 0 0 -1.57 }
                    
            DEF __LABEL SoAbortGroup { abortActions BBOX
              AntiSquish { sizing Y }
                FontStyle { size 0.5 family SANS }
            Material { diffuseColor 0.333333333333333 0 1 } Text3 { string "HUD Visible"   justification CENTER  parts FRONT }
             }
  
                    }
                    onGeometry Separator {
                        USE __ON_GEOM
                        Transform { translation 0 0.101 0.25 rotation 1 0 0 -1.57 }
                        USE __LABEL
                    }
                    highlightedOffGeometry Separator {
                        Material { diffuseColor 0.7 0.7 0.7 }
              USE __OFF_HL_GEOM
                        Transform { translation 0 0.501 0.25 rotation 1 0 0 -1.57 }
                        USE __LABEL
                    }
                    highlightedOnGeometry Separator {
                        Material { diffuseColor 0.7 0.7 0.7 }
              USE __ON_HL_GEOM
                        Transform { translation 0 0.101 0.25 rotation 1 0 0 -1.57 }
                        USE __LABEL
                    }           
                }
            }
            
            Separator {                 # SoToggleButton HUDARROWVISIBLE
                Transform { translation 0.473484848484849 0 0.228219696969697 } 
                DEF HUDARROWVISIBLE SoToggleButton {
                    width 0.909090909090909
                    height 0.1
                    depth 0.115530303030303
                    
                    offGeometry Separator {
                        USE __OFF_GEOM
                        Transform { translation 0 0.501 0.25 rotation 1 0 0 -1.57 }
                    
            DEF __LABEL SoAbortGroup { abortActions BBOX
              AntiSquish { sizing Y }
                FontStyle { size 0.5 family SANS }
            Material { diffuseColor 0.333333333333333 0 1 } Text3 { string "HUD Arrow Visible"   justification CENTER  parts FRONT }
             }
  
                    }
                    onGeometry Separator {
                        USE __ON_GEOM
                        Transform { translation 0 0.101 0.25 rotation 1 0 0 -1.57 }
                        USE __LABEL
                    }
                    highlightedOffGeometry Separator {
                        Material { diffuseColor 0.7 0.7 0.7 }
              USE __OFF_HL_GEOM
                        Transform { translation 0 0.501 0.25 rotation 1 0 0 -1.57 }
                        USE __LABEL
                    }
                    highlightedOnGeometry Separator {
                        Material { diffuseColor 0.7 0.7 0.7 }
              USE __ON_HL_GEOM
                        Transform { translation 0 0.101 0.25 rotation 1 0 0 -1.57 }
                        USE __LABEL
                    }           
                }
            }
            
            Separator {                 # SoToggleButton PORTALVISIBLE
                Transform { translation 0.473484848484849 0 0.379734848484849 } 
                DEF PORTALVISIBLE SoToggleButton {
                    width 0.909090909090909
                    height 0.1
                    depth 0.115530303030303
                    
                    offGeometry Separator {
                        USE __OFF_GEOM
                        Transform { translation 0 0.501 0.25 rotation 1 0 0 -1.57 }
                    
            DEF __LABEL SoAbortGroup { abortActions BBOX
              AntiSquish { sizing Y }
                FontStyle { size 0.5 family SANS }
            Material { diffuseColor 0.333333333333333 0 1 } Text3 { string "Portal Visible"   justification CENTER  parts FRONT }
             }
  
                    }
                    onGeometry Separator {
                        USE __ON_GEOM
                        Transform { translation 0 0.101 0.25 rotation 1 0 0 -1.57 }
                        USE __LABEL
                    }
                    highlightedOffGeometry Separator {
                        Material { diffuseColor 0.7 0.7 0.7 }
              USE __OFF_HL_GEOM
                        Transform { translation 0 0.501 0.25 rotation 1 0 0 -1.57 }
                        USE __LABEL
                    }
                    highlightedOnGeometry Separator {
                        Material { diffuseColor 0.7 0.7 0.7 }
              USE __ON_HL_GEOM
                        Transform { translation 0 0.101 0.25 rotation 1 0 0 -1.57 }
                        USE __LABEL
                    }           
                }
            }
            
            Separator {                 # SoToggleButton PORTALARROWVISIBLE
                Transform { translation 0.473484848484849 0 0.53125 } 
                DEF PORTALARROWVISIBLE SoToggleButton {
                    width 0.909090909090909
                    height 0.1
                    depth 0.115530303030303
                    
                    offGeometry Separator {
                        USE __OFF_GEOM
                        Transform { translation 0 0.501 0.25 rotation 1 0 0 -1.57 }
                    
            DEF __LABEL SoAbortGroup { abortActions BBOX
              AntiSquish { sizing Y }
                FontStyle { size 0.5 family SANS }
            Material { diffuseColor 0.333333333333333 0 1 } Text3 { string "Portal Arrow Visible"   justification CENTER  parts FRONT }
             }
  
                    }
                    onGeometry Separator {
                        USE __ON_GEOM
                        Transform { translation 0 0.101 0.25 rotation 1 0 0 -1.57 }
                        USE __LABEL
                    }
                    highlightedOffGeometry Separator {
                        Material { diffuseColor 0.7 0.7 0.7 }
              USE __OFF_HL_GEOM
                        Transform { translation 0 0.501 0.25 rotation 1 0 0 -1.57 }
                        USE __LABEL
                    }
                    highlightedOnGeometry Separator {
                        Material { diffuseColor 0.7 0.7 0.7 }
              USE __ON_HL_GEOM
                        Transform { translation 0 0.101 0.25 rotation 1 0 0 -1.57 }
                        USE __LABEL
                    }           
                }
            }
            
            }
            }
    



        }

        # --- HUD -------------------------------------------------------------

        windowGroup Group
        {
            SoAbortGroup {
                abortActions (CB|EVENT|PICK|EVENT3D)

                Switch
                {
                    whichChild 0 = USE PORTALARROWVISIBLE.on

                    Group { }

                    Switch
                    {
                        whichChild 0 = USE NAV_NAVKIT.destinationReached

                        Separator
                        {
                            SoStroke 
                            {
                                point [ 0 0 0, 0 0 0] = Calculator {
                                    A = USE NAV_NAVKIT.linePoints
                                    B = SoTrakEngine { station 2 }.translation
                                    expression ["oA = A", "oA[1] = B[1] - 1"]
                                }.oA
                                scale DIRECTION
                                geometry Group 
                                {
                                    Transform { rotation 0 0 1 -1.57 }
                                    Material { diffuseColor 1 0.5 0 emissiveColor 1 0.5 0 }
                                    Cylinder { height 1 radius 0.05 }
                                    Transform { translation 0 0.5 0 }
                                    Cone { bottomRadius 0.1 height 0.333333 }
                                }
                            }
                        }

                        Group { }
                    }
                }

                Switch
                {
                    whichChild 1 = USE HUDVISIBLE.on

                    Group { }

                    Separator
                    {
                        OrthographicCamera { aspectRatio 1.3333333 }
                        Material { diffuseColor 1 1 1 emissiveColor 0.5 0.5 0.5 }
                        Transform { translation 0 0 -1 }

                        Switch
                        {
                            whichChild 1 = USE HUDARROWVISIBLE.on

                            Group { }

                            Switch
                            {
                                whichChild 0 = USE NAV_NAVKIT.destinationReached

                                Separator
                                {                                
                                    Transform { rotation 1 0 0 1.57 translation +1.1 +0.8 0 }
                                    Material { transparency 0.6 }
                                    Sphere { radius 0.2 }
                                    Transform { rotation =  SoFactorRotation { axis  Y order PRE rotation =  USE NAV_NAVKIT.arrowDirection }.factor }
                                    Group 
                                    {
                                        Transform { rotation 0 0 1 -1.57 scaleFactor 0.4 0.4 0.4 }
                                        Material { diffuseColor 0 0.5 1 emissiveColor 0 0.5 1 }
                                        Cylinder { height 0.8 radius 0.04 }
                                        Transform { translation 0 0.4 0 }
                                        Cone { bottomRadius 0.08 height 0.15 }
                                    }
                                }

                                Group { }
                            }
                        }

                        #Font { name "Arial" size 0.1 }
                        Font { name "Arial: Bold Italic" size 26 }

                        Switch
                        {
                            whichChild 0 = USE NAV_NAVKIT.destinationReached

                            Group { }

                            Separator
                            {
                                Transform { translation 0 -0.9 0 }
                                Material { diffuseColor 1 0.5 0 emissiveColor 1 0.5 0 }
                                # AsciiText { justification CENTER string "Destination Reached" spacing 1.5 }
                                Text2 { justification CENTER string "Destination Reached" spacing 1.5 }
                            }
                        }

                        Transform { translation -0.7 +0.9 0 }
                        Separator { Transform { translation 0 -0.0 -1 } Material { transparency 0.6 } Cube { width 1.3 height 0.25 depth 0.001 } }
                        Transform { translation -0.2 0 0 }                        
                        # AsciiText { justification RIGHT string ["Current", "Destination"] spacing 1 }
                        Text2 { justification RIGHT string ["Current", "Destination"] spacing 1 }
                        Transform { translation 0.05 0 0 }

                        # AsciiText
                        Text2
                        {
                            justification LEFT
                            string ["???", "???"] = Concatenate 
                            {
                                type SoMFString
                                input0 = USE NAV_NAVKIT.currentRoom
                                input1 = USE NAV_NAVKIT.destinationRoom
                            }.output
                            spacing 1
                        }
                    }
                }

                # highlighted portal

                DEF NAV_HIGHLIGHTEDPORTAL Switch                                
                {
                    whichChild = USE PORTALVISIBLE.on
                    # empty group for invisible
                    Group {}
                    # portal highlight
                    Separator {
                        ResetTransform { whatToReset TRANSFORM }
                        DepthBuffer { enable FALSE } 
                        
                        # ===== highlighted Portal Style                        
                        SoNodeContext {
                            index "BAU.all"
                            value DrawStyle { style INVISIBLE }
                        }
                        #SoNodeContext {
                        #    index "BAU.floor" 
                        #    value Group {
                        #        LightModel { model BASE_COLOR }
                        #        DrawStyle { style FILLED }
                        #        ShapeHints { faceType UNKNOWN_FACE_TYPE }    
                        #        Material {
                        #            diffuseColor 1 1 1
                        #            transparency 0.7
                        #        }
                        #    }                            
                        #}
                        SoNodeContext {
                            index "BAU.portal"
                            value Group {
                                LightModel { model BASE_COLOR }
                                DrawStyle { style FILLED }
                                ShapeHints { faceType UNKNOWN_FACE_TYPE }
                                Material {
                                    emissiveColor 0.9 0.9 0.3
                                    diffuseColor 0.9 0.9 0.3
                                    transparency 0.5
                                }
                            }
                        }
                        SoMultiSwitch { 
                            whichChildren = DEF IndexMap SoStringMap { 
                                mode INDEX
                                aIn = USE NAV_NAVKIT.currentRoom
                            }.bOut
                        }
                        SoRoute { from "Model.roomNames" to "IndexMap.a" }
                        SoContext {
                            index "BAU.portal.switch"
                            value = USE NAV_NAVKIT.portalIndex
                        }
                        DEF Building SoUse { name "Model" }
                        # SoRouteDB { name "portalIndex" in = USE NAV_NAVKIT.portalIndex }
                        # SoRouteDB { name "room index" in = USE IndexMap.bOut }
                        SoRouteDB { name "room list" in = USE IndexMap.a }
                    }
                }
            }
            
            # ---------------------------------------------------------------------
            # connections for APRIL component
            SoAbortGroup {
                abortActions (RENDER|CB|BBOX|EVENT|PICK|MATRIX|EVENT3D)
                Info { string = GlobalField {
                           type SFVec3f
                           nav_signpost_position = USE NAV_NAVKIT.position
                       }.nav_signpost_position
                }
                Info { string = GlobalField {
                           type SFRotation
                           nav_signpost_orientation = USE NAV_NAVKIT.orientation
                       }.nav_signpost_orientation
                }
                Info { string = GlobalField {
                           type SFString
                           nav_signpost_currentRoom = USE NAV_NAVKIT.currentRoom
                       }.nav_signpost_currentRoom
                }
                Info { string = GlobalField {
                           type SFString
                           nav_signpost_nextRoom = USE NAV_NAVKIT.nextRoom
                       }.nav_signpost_nextRoom
                }
                Info { string = GlobalField {
                           type MFString
                           nav_signpost_path = USE NAV_NAVKIT.path
                       }.nav_signpost_path
                }
                Info { string = GlobalField {
                           type SFBool
                           nav_signpost_destinationReached = USE NAV_NAVKIT.destinationReached
                       }.nav_signpost_destinationReached
                }                
                Info { string = GlobalField {
                           type SFVec3f
                           nav_signpost_portalPosition = USE NAV_NAVKIT.portalPosition
                     }.nav_signpost_portalPosition
                }
            }            
            # ---------------------------------------------------------------------
        }

        # ---------------------------------------------------------------------
         building = USE Building.node

         position = DEF USERTRAKENGINE SoTrakEngine { station 2 }.translation
         orientation = USE USERTRAKENGINE.rotation
         destinationRoom = DEF NAV_IN SoFanIn {
            type SoMFString
            in0 = USE ROOMLISTBOX.selected
            in1 = GlobalField {
                type SFString
                nav_signpost_destination ""              
            }.nav_signpost_destination
            # in2 connected to Info application
         }.out
        # -------------------------------------------------------------------

    }
    
    appGeom Separator 
    {
        Texture2 
        { 
            filename "images/nav_logo.gif" 
        }
    }
}
