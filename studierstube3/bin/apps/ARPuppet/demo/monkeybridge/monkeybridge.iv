#Inventor V2.1 ascii

DEF PUPPETEERTEST1 SoApplicationKit {

    info Info {}

    appGeom Separator {}

    contextKit SoContextKit {

        clonePipSheet  FALSE

        templatePipSheet Separator {}

        windowGroup Group {

            SoClassLoader {
                className "SoChoreographerKit"
                fileName "../apps/arpuppet/characters/arpuppet"
            }
            SoClassLoader {
                className "SoCal3DPuppeteer"
                fileName "../apps/arpuppet/characters/cal3dpuppet/cal3dpuppet"
            }
            SoClassLoader {
                className "SceneManager"
                fileName "../apps/arpuppet/demo/monkeybridge/monkeybridge"
            }
            SoClassLoader {
                className "GameManager"
                fileName "../apps/arpuppet/demo/monkeybridge/monkeybridge"
            }
            SoClassLoader {
                className "Choreographer"
                fileName "../apps/arpuppet/demo/monkeybridge/monkeybridge"
            }
            SoClassLoader {
                className "Character"
                fileName "../apps/arpuppet/demo/monkeybridge/monkeybridge"
            }
            SoClassLoader {
                className "MiniView"
                fileName "../apps/arpuppet/demo/monkeybridge/monkeybridge"
            }
            SoClassLoader {
                className "Director"
                fileName "../apps/arpuppet/demo/monkeybridge/monkeybridge"
            }
            SoClassLoader {
                className "BoidFlock"
                fileName  "../apps/arpuppet/demo/monkeybridge/monkeybridge"
            }
            SoClassLoader {
                className "Ocean"
                fileName  "../apps/arpuppet/demo/monkeybridge/monkeybridge"
            }
            SoClassLoader {
                className "SoFMODSound"
                fileName  "FMODSound"
            }

            SoWindowKit {
                state MAXIMIZED
                clientVolume Separator {
                
#################### GAME-SPECIFIC SETTINGS ---> go through the configuration steps below ######################################################################################

                    # 1.) Set character ID to make turn on character-specific settings in the game. "-1" means that no character-specific settings will be used.
                    #     In case of a desktop based setup you HAVE to set the value to a valid user ID 0 <= <= (number of users - 1).
                    DEF CHARACTERNUM SoInfo { string "-1" }

                    # 2.) Set partner machine's IP address if you are using the desktop-based setup
                    DEF PARTNER_IPADDRESS SoInfo { string "localhost" }

                    # 3.) Go to the SCENEMANAGER node below in the scenegraph and set its useRemoteInfo field to one the following values depending on the game setup used:
                    #     a) no distribution: FALSE
                    #     b) distribution: if CHARACTERNUM.string = i, set useRemoteInfo[i] to FALSE and all the other values to TRUE
                    #                      e.g. in a dual-user setup for user 0 set [ FALSE, TRUE ]
                    #     c) observer mode with distribution: set TRUE for all users, e.g. in a dual-user setup [ TRUE, TRUE ]
                    #
                    # 4.) If you use distribution, uncomment the client SoSocketModules connected to SCENEMANAGER.tileSnappedInfoRemote and SCENEMANAGER.tileToPlaceTypeRemote
                    #     and the server SoSocketModules below the SCENEMANAGER node
                    #
                    # 5.) If you use distribution, uncomment the SOCKET_CLIENT_INIT or SOCKET_SERVER_INIT SoSocketModule depending on the instructions written in 
                    #     the GAMEMANAGER node below

#################### end of GAME-SPECIFIC SETTINGS #############################################################################################################################

                    # keyboard commands
                    DEF KEY_S SoKeyToggle { key "s" } # start/stop game
                    DEF KEY_P SoKeyToggle { key "p" } # turn the display of physical objects on/off
                    DEF KEY_I SoKeyToggle { key "i" } # turn auxiliary grid on/off
                    DEF KEY_H SoKeyToggle { key "h" } # turn HUD on/off
                    DEF KEY_B SoKeyToggle { key "b" } # turn boids on/off
                    DEF KEY_L SoKeyToggle { key "l" } # turn boid cursor on/off
                    DEF KEY_O SoKeyToggle { key "o" } # turn ocean on/off
                    DEF KEY_K SoKeyToggle { key "k" } # calibration display on/off

                    DEF MAINSWITCH SoSwitch {
                        Separator{
                            Separator {
                                DEF ORTHOGRAPHICCAMERA SoOrthographicCamera {
                                    height 1.0
                                    aspectRatio 1.0
                                    nearDistance 0.5
                                    viewportMapping LEAVE_ALONE
                                }
                                Transform { translation 0 0 0 scaleFactor 0.01 0.012 0.01 }
                                DEF GAMEMANAGER GameManager {
                                    texture DEF TEXTTEXTURE SoTexture2 { 
                                        filename "../apps/arpuppet/demo/monkeybridge/texture/texttexture.jpg" 
                                        model DECAL
                                    }
                                    material DEF TEXTMATERIAL SoMaterial {
                                        diffuseColor 1 1 1
                                    }
                                    font DEF TEXTFONT SoFont {
                                        name "Arial : Bold"
                                        size 14
                                    }
                                    countdownFrom 5
                                    speed 1.0
                                    init = SoFanIn {
                                        type SoMFBool
                                        in0 = USE KEY_S.toggled
                                        # uncomment the following node connected if it's a desktop-based setup and you are NOT the user who starts the game, otherwise leave it commented
                                        #in1 = DEF SOCKET_CLIENT_INIT SoSocketModule {
                                        #    port 55555
                                        #    mode CLIENT
                                        #    address = USE PARTNER_IPADDRESS.string
                                        #    in = USE GAMEMANAGER.init
                                        #}.out
                                    }.out
                                }
                                # uncomment the following node if it's a desktop-based setup and you ARE the user who starts the game, otherwise leave it commented
                                #DEF SOCKET_SERVER_INIT SoSocketModule {
                                #    port 55555
                                #    mode SERVER
                                #    in = USE GAMEMANAGER.init
                                #}
                            }

                            DEF CHOREOGRAPHER Choreographer {
                                id "choreographer"
                                init = USE GAMEMANAGER.init
                                speed [
                                    2500,  # walk
                                    2500,  # walk up
                                    2500,  # walk down
                                    2000,  # lookaround
                                    4000,  # dunno
                                    6500,  # win
                                    11000, # lose
                                    500,   # jump_up
                                    400,   # jump_down
                                    300    # fall_board
                                    2000   # fall_water
                                ]
                                globalScale 1.0 # 0.72 for HMD + FOB w/ Standard Range Transmitter
                                heightThreshold 0.04
                                tileGapThreshold 0.021
                                puppeteers Separator {
                                    
                                    DEF SCENEMANAGER SceneManager {
                                        id "scenemanager"
                                        tileSize 0.1
                                        globalScale = USE CHOREOGRAPHER.globalScale
                                        maxCoordinate 10 10
                                        controlMode [ SCRIPT, SCRIPT ]
                                        positionBase = SoGate {
                                            type SoMFVec3f
                                            input = DEF TRAK_PLAYFIELD SoTrakEngine { station 0 }.translation
                                            enable = SoOnOff {
                                                toggle = USE KEY_K.toggled
                                            }.isOff
                                        }.output
                                        orientationBase = SoGate {
                                            type SoMFRotation
                                            input = USE TRAK_PLAYFIELD.rotation
                                            enable = SoOnOff {
                                                toggle = USE KEY_K.toggled
                                            }.isOff
                                        }.output
                                        tileToPlacePosition = SoConcatenate {
                                            type SoMFVec3f
                                            input0 = DEF TRAK_USER0_TILE0 SoTrakEngine { station 1 }.translation
                                            input1 = DEF TRAK_USER1_TILE0 SoTrakEngine { station 2 }.translation
                                        }.output
                                        tileToPlaceOrientation = SoConcatenate {
                                            type SoMFRotation
                                            input0 = USE TRAK_USER0_TILE0.rotation
                                            input1 = USE TRAK_USER1_TILE0.rotation
                                        }.output
                                        # playfieldInitInfo element: x, y, userID+(tileNum+1)/10.0f, tileID+rotation%(PI/2)*0.25f
                                        # tileType: INVALID=-2, WATER=-1, STARTTILE, ENDTILE, FIXTILE0, FIXTILE1, DECORATION0, DECORATION1,
                                        #           USERTILE0, USERTILE1, USERTILE2, USERTILE3, USERTILE4, USERTILE5, USERTILE6, USERTILE7, USERTILE8
                                        playfieldInitInfo [ 
                                            9 9 0 0.25, # start tile player0
                                            0 0 1 0,    # start tile player1
                                            2 2 0 1,    # end tile player0
                                            7 7 1 1,    # end tile player1
                                            3 6 -2 2,   # fixed slope tile #1
                                            6 3 -2 3.5, # fixed slope tile #2
                                            1 4 -2 4,   # volcano
                                            8 2 -2 5    # lighthouse
                                        ]
                                        # bonusObjectInfo [ ] # TODO: implement
                                        init = USE GAMEMANAGER.init
                                        tileNum 1  # this field can be set individually for each user as well
                                        playerNum = USE CHOREOGRAPHER.characterNum
                                        tileToPlaceNumMax 2 # this field can be set individually for each user as well
                                        timeOut 2 # this field can be set individually for each user as well
                                        tilePlacedCursorTimeOut 1.5 # this field can be set individually for each user as well
                                        enabled = USE GAMEMANAGER.enabled
                                        maxTileTypeID 14
                                        avoidTileType [ 0, 1, 2, 3, 4, 5 ]
                                        showPhysicalTiles = SoOnOff {
                                            toggle = USE KEY_P.toggled
                                        }.isOn
                                        physicalTileTexture "../apps/arpuppet/demo/monkeybridge/texture/stone.jpg"
                                        tileColor [ 1 0.68 0.68, 0.6 0.6 1 ]
                                        tileLibrary SoSwitch {
                                            whichChild -1
                                            # start and end tile (STARTTILE, ENDTILE)
                                            SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/startTile.iv" }
                                            SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/endTile.iv" }
                                            # fix tiles (FIXTILE0, FIXTILE1)
                                            SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/fixtile_12a.iv" }
                                            SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/fixtile_22.iv" }
                                            # decoration elements (DECORATION0, DECORATION1)
                                            SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/volcano.iv" }
                                            SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/lighthouse.iv" }
                                            # user tiles (USERTILE0 ... USERTILE8)
                                            SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/tile_12a.iv" }
                                            SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/tile_12b.iv" }
                                            SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/tile_12c.iv" }
                                            SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/tile_13.iv" }
                                            SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/tile_22.iv" }
                                            SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/tile_23a.iv" }
                                            SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/tile_23b.iv" }
                                            SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/tile_23c.iv" }
                                            SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/tile_33.iv" }
                                        }
                                        hotspotOffset [
                                            # the lines represent hotspots north, east, south, west, center
                                            # STARTTILE
                                             0.0   0.039  -0.04,
                                             0.04  0.039   0.0,
                                             0.0   0.039   0.04,
                                            -0.04  0.039   0.0,
                                             0.0   0.039   0.0,
                                            # ENDTILE
                                             0.0   0.039  -0.04,
                                             0.04  0.039   0.0,
                                             0.0   0.039   0.04,
                                            -0.04  0.039   0.0,
                                             0.0   0.039   0.0,
                                            # FIXTILE0 (slope)
                                             0.0   0.0195 -0.04,
                                             0.04  0.039   0.0,
                                             0.0   0.0195  0.04,
                                            -0.04  0.003   0.0,
                                             0.0   0.0195  0.0,
                                            # FIXTILE1 (cubic)
                                             0.0   0.039  -0.04,
                                             0.04  0.039   0.0,
                                             0.0   0.039   0.04,
                                            -0.04  0.039   0.0,
                                             0.0   0.039   0.0,
                                            # DECORATION0 (all 0, no calibration needed since the character cannot walk on it anyway)
                                             0 0 0,
                                             0 0 0,
                                             0 0 0,
                                             0 0 0,
                                             0 0 0,
                                            # DECORATION1 (all 0, no calibration needed since the character cannot walk on it anyway)
                                             0 0 0,
                                             0 0 0,
                                             0 0 0,
                                             0 0 0,
                                             0 0 0,
                                            # USERTILE0 (12a)
                                             0.0   0.0195 -0.04,
                                             0.04  0.039   0.0,
                                             0.0   0.0195  0.04,
                                            -0.04  0.003   0.0,
                                             0.0   0.0195  0.0,
                                            # USERTILE1 (12b)
                                             0.0   0.039  -0.04,
                                             0.04  0.039   0.0,
                                             0.0   0.039   0.04,
                                            -0.04  0.003   0.0,
                                             0.0   0.039   0.0,
                                            # USERTILE2 (12c) --> this tile needs to be a bit higher because of the ground plane (a value higher than 0)
                                             0.0   0.003  -0.04,
                                             0.04  0.039   0.0,
                                             0.0   0.003   0.04,
                                            -0.04  0.003   0.0,
                                             0.0   0.003   0.0,
                                            # USERTILE3 (13)
                                             0.0   0.039  -0.04,
                                             0.04  0.078   0.0,
                                             0.0   0.039   0.04,
                                            -0.04  0.003   0.0,
                                             0.0   0.039   0.0,
                                            # USERTILE4 (22)
                                             0.0   0.039  -0.04,
                                             0.04  0.039   0.0,
                                             0.0   0.039   0.04,
                                            -0.04  0.039   0.0,
                                             0.0   0.039   0.0,
                                            # USERTILE5 (23a)
                                             0.0   0.0585 -0.04,
                                             0.04  0.078   0.0,
                                             0.0   0.0585  0.04,
                                            -0.04  0.039   0.0,
                                             0.0   0.0585  0.0,
                                            # USERTILE6 (23b)
                                             0.0   0.078  -0.04,
                                             0.04  0.078   0.0,
                                             0.0   0.078   0.04,
                                            -0.04  0.039   0.0,
                                             0.0   0.078   0.0,
                                            # USERTILE7 (23c)
                                             0.0   0.039  -0.04,
                                             0.04  0.078   0.0,
                                             0.0   0.039   0.04,
                                            -0.04  0.039   0.0,
                                             0.0   0.039   0.0,
                                            # USERTILE8 (33)
                                             0.0   0.078  -0.04,
                                             0.04  0.078   0.0,
                                             0.0   0.078   0.04,
                                            -0.04  0.078   0.0,
                                             0.0   0.078   0.0
                                        ]
                                        useRemoteInfo [ FALSE, FALSE ] ########################## set this manually!!! #############################
                                        #tileSnappedInfoRemote = DEF SOCKET_CLIENT_INFO SoSocketModule {
                                        #    mode CLIENT
                                        #    address = USE PARTNER_IPADDRESS.string
                                        #    port = SoSelectOne {
                                        #        type SoMFInt32
                                        #        input [ 55556, 55558 ]
                                        #        index = USE CHARACTERNUM.string
                                        #    }.output
                                        #}.out
                                        #tileToPlaceTypeRemote = DEF SOCKET_CLIENT_TYPE SoSocketModule {
                                        #    mode CLIENT
                                        #    address = USE PARTNER_IPADDRESS.string
                                        #    port = SoSelectOne {
                                        #        type SoMFInt32
                                        #        input [ 55557, 55559 ]
                                        #        index = USE CHARACTERNUM.string
                                        #    }.output
                                        #}.out
                                    } # end of sceneManager

                                    DEF CHARACTER0 Character {
                                        controlMode [ SCRIPT, SCRIPT, EXTERNAL ]
                                        positionBase = USE SCENEMANAGER.positionBase
                                        orientationBase = USE SCENEMANAGER.orientationBase
                                        scaleSet = SoCalculator {
                                            A = SoInfo { string "0.6 0.6 0.6" }.string
                                            a = USE CHOREOGRAPHER.globalScale
                                            expression "oA = A * a"
                                        }.oA
                                        globalScale = USE CHOREOGRAPHER.globalScale
                                        animationPrefix "golem_"
                                        puppets SoDragKit {
                                            content Separator {
                                                SoMultiSwitch {
                                                    Separator {
                                                        SoCal3DPuppet {
                                                            pathName "../apps/arpuppet/characters/cal3dpuppet/data"
                                                            fileName "golem.cfg"
                                                            lod 100
                                                            visible TRUE
                                                            animate TRUE
                                                            skeleton FALSE
                                                            wireframe FALSE
                                                            mesh TRUE
                                                            delayIn 1
                                                            delayOut 1
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    } # end of CHARACTER0

                                    DEF CHARACTER1 Character {
                                        controlMode [ SCRIPT, SCRIPT, EXTERNAL ]
                                        positionBase = USE SCENEMANAGER.positionBase
                                        orientationBase = USE SCENEMANAGER.orientationBase
                                        scaleSet = SoCalculator {
                                            A = SoInfo { string "0.6 0.6 0.6" }.string
                                            a = USE CHOREOGRAPHER.globalScale
                                            expression "oA = A * a"
                                        }.oA
                                        globalScale = USE CHOREOGRAPHER.globalScale
                                        animationPrefix "golem_"
                                        puppets SoDragKit {
                                            content Separator {
                                                SoMultiSwitch {
                                                    Separator {
                                                        SoCal3DPuppet {
                                                            pathName "../apps/arpuppet/characters/cal3dpuppet/data"
                                                            fileName "golem2.cfg"
                                                            lod 100
                                                            visible TRUE
                                                            animate TRUE
                                                            skeleton FALSE
                                                            wireframe FALSE
                                                            mesh TRUE
                                                            delayIn 1
                                                            delayOut 1
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    } # end of CHARACTER1

                                    DEF BOIDFLOCK BoidFlock {
                                        id "flock_of_boids"
                                        showPuppeteer = SoOnOff {
                                            toggle = USE KEY_B.toggled
                                        }.isOn
                                        controlMode [ EXTERNAL, SCRIPT, EXTERNAL ]
                                        scaleSet = SoCalculator {
                                            A = SoInfo { string "1.0 1.0 1.0" }.string
                                            a = USE CHOREOGRAPHER.globalScale
                                            expression "oA = A * a"
                                        }.oA
                                        positionBase = USE SCENEMANAGER.position
                                        orientationBase = USE SCENEMANAGER.orientation
                                        positionOffset = SoCalculator {
                                            A = SoInfo { string "0 0.4 0" }.string # TODO: lower the Y coordinate if obstacle avoidance works!
                                            a = USE CHOREOGRAPHER.globalScale
                                            expression "oA = A * a"
                                        }.oA
                                        number 5
                                        whichPuppets -3
                                        filename "../apps/arpuppet/demo/monkeybridge/mesh/boid.iv"
                                        influenceRadiusSquared 400
                                        collisionFraction 0.8
                                        angleTweak 0.02
                                        pitchToSpeedRatio 0.002
                                        normalSpeed 0.4
                                        goal = SoCalculator {
                                            a = USE SCENEMANAGER.tileSize
                                            b 5.0
                                            c = SoElapsedTime { speed 0.4 }.timeOut
                                            expression [
                                                "oA[0] = a*b*sin(c)",
                                                "oA[1] = 0",
                                                "oA[2] = a*b*sin(c)*cos(c)"
                                            ]
                                        }.oA
                                        obstaclePosition = USE SCENEMANAGER.obstacleTilePosition
                                        obstacleRadius = USE SCENEMANAGER.tileSize
                                    }

                                } # end of puppeteers
                            } # end of Choreographer
                            
                            #DEF SOCKET_SERVER_INFO SoSocketModule {
                            #    port = SoSelectOne {
                            #        type SoMFInt32
                            #        input [ 55558, 55556 ]
                            #        index = USE CHARACTERNUM.string
                            #    }.output
                            #    mode SERVER
                            #    in = USE SCENEMANAGER.tileSnappedInfo
                            #}
                            #DEF SOCKET_SERVER_TYPE SoSocketModule {
                            #    port = SoSelectOne {
                            #        type SoMFInt32
                            #        input [ 55559, 55557 ]
                            #        index = USE CHARACTERNUM.string
                            #    }.output
                            #    mode SERVER
                            #    in = USE SCENEMANAGER.tileToPlaceType
                            #}

                            DEF DIRECTOR Director {
                                init = USE GAMEMANAGER.init
                                characterNum = USE CHOREOGRAPHER.characterNum
                                finishedCommandData = USE CHOREOGRAPHER.finishedCommandData
                                fallenDown = USE CHOREOGRAPHER.fallenDown
                                hotspotSet = USE SCENEMANAGER.hotspotSet
                                targetReached = USE SCENEMANAGER.targetReached
                                nextTileValid = USE SCENEMANAGER.nextTileValid
                            }
                            SoRoute { from "DIRECTOR.command" to "CHOREOGRAPHER.command" }
                            SoRoute { from "DIRECTOR.playerCompletedTile" to "SCENEMANAGER.playerCompletedTile" }
                            SoRoute { from "DIRECTOR.seekNextTile" to "SCENEMANAGER.seekNextTile" }
                            SoRoute { from "DIRECTOR.alive" to "GAMEMANAGER.alive" }
                            SoRoute { from "DIRECTOR.win" to "GAMEMANAGER.win" }

                            # auxiliary grid for tile positioning 
                            SoSwitch {
                                whichChild = SoOnOff {
                                    toggle = USE KEY_I.toggled
                                }.isOff
                                Separator {}
                                Separator {
                                    DEF PLAYFIELDPOSE Transform {
                                        translation = USE SCENEMANAGER.positionBase
                                        rotation = USE SCENEMANAGER.orientationBase
                                    }
                                    Transform {
                                        rotation 1 0 0 -1.57
                                    }
                                    SoDrawStyle {
                                        style LINES
                                    }
                                    DEF MV_GRID MiniView {
                                        occupationInfo -2 -2
                                        maxCoordinate = USE SCENEMANAGER.maxCoordinate
                                        defaultTileColor 0.5 0.5 0.5
                                        tileSize 0.1
                                        globalScale = USE CHOREOGRAPHER.globalScale
                                    }
                                }
                            }

                            # orientation information
                            Separator {
                                USE PLAYFIELDPOSE
                                Separator {
                                    Transform { 
                                        scaleFactor = SoComposeVec3f {
                                            x = USE CHOREOGRAPHER.globalScale
                                            y = USE CHOREOGRAPHER.globalScale
                                            z = USE CHOREOGRAPHER.globalScale
                                        }.vector
                                    }
                                    Transform {
                                       translation 0 0.03 -0.62
                                       scaleFactor 0.0005 0.0005 0.0005
                                    }
                                    SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/north.iv" }
                                }
                            }

                            # cursor for player#0, tile#0
                            Separator {
                                Transform {
                                    translation = USE TRAK_USER0_TILE0.translation
                                    rotation = USE TRAK_USER0_TILE0.rotation
                                }
                                SoBillboardKit {
                                    content SoSeparator {
                                        Transform { 
                                            scaleFactor = SoComposeVec3f {
                                                x = USE CHOREOGRAPHER.globalScale
                                                y = USE CHOREOGRAPHER.globalScale
                                                z = USE CHOREOGRAPHER.globalScale
                                            }.vector
                                        }
                                        Transform { translation 0 0.16 0 scaleFactor 0.0003 0.0008 0.0003 rotation 1 0 0 1.57 }
                                        Switch {
                                            whichChild = SoCalculator {
                                                a = SoSelectOne {
                                                    type SoMFBool
                                                    input = USE SCENEMANAGER.tilePlacedCursorOn
                                                    index 0
                                                }.output
                                                b = SoSelectOne {
                                                    type SoMFBool
                                                    input = USE SCENEMANAGER.isOverValidCoord
                                                    index 0
                                                }.output
                                                expression "oa = (a==1) ? 2 : b"
                                            }.oa
                                            DEF CURSOR_WRONG Separator {
                                                SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/cross.iv" }
                                            }
                                            DEF CURSOR_TILEPLACING Separator {
                                                SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/downarrow.iv" }
                                            }
                                            DEF CURSOR_TILEPLACED Separator {
                                                SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/checkmark.iv" }
                                            }
                                        }
                                        Material { diffuseColor 1 1 0 }
                                        Transform { translation 0 0 -200 }
                                        SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/one.iv" }
                                    }
                                }
                            }

                            # cursor for player#1, tile#0
                            Separator {
                                Transform { 
                                    translation = USE TRAK_USER1_TILE0.translation
                                    rotation = USE TRAK_USER1_TILE0.rotation
                                }
                                SoBillboardKit {
                                    content SoSeparator {
                                        Transform { 
                                            scaleFactor = SoComposeVec3f {
                                                x = USE CHOREOGRAPHER.globalScale
                                                y = USE CHOREOGRAPHER.globalScale
                                                z = USE CHOREOGRAPHER.globalScale
                                            }.vector
                                        }
                                        Transform { translation 0 0.16 0 scaleFactor 0.0003 0.0008 0.0003 rotation 1 0 0 1.57 }
                                        Switch {
                                            whichChild = SoCalculator {
                                                a = SoSelectOne {
                                                    type SoMFBool
                                                    input = USE SCENEMANAGER.tilePlacedCursorOn
                                                    index 1
                                                }.output
                                                b = SoSelectOne {
                                                    type SoMFBool
                                                    input = USE SCENEMANAGER.isOverValidCoord
                                                    index 1
                                                }.output
                                                expression "oa = (a==1) ? 2 : b"
                                            }.oa
                                            USE CURSOR_WRONG
                                            USE CURSOR_TILEPLACING
                                            USE CURSOR_TILEPLACED
                                        }
                                        Material { diffuseColor 1 1 0 }
                                        Transform { translation 0 0 -200 }
                                        SoFile { name "../apps/arpuppet/demo/monkeybridge/mesh/two.iv" }
                                    }
                                }
                            }

                            # ocean component
                            SoSwitch {
                                whichChild = SoOnOff {
                                    toggle = USE KEY_O.toggled
                                }.isOn
                                Separator {}
                                SoSeparator {
                                    USE PLAYFIELDPOSE
                                    Transform { scaleFactor 0.016 0.016 0.016 } # for precise scale
                                    DEF OCEAN Ocean {
                                        meshResolution 64 64
                                        color 0 0.7 1.0
                                        transparency 0.8
                                        gravity 12
                                        scale = USE CHOREOGRAPHER.globalScale
                                    }
                                }
                            }

                            # calibration information display 
                            SoSwitch {
                                whichChild = SoOnOff {
                                    toggle = USE KEY_K.toggled
                                }.isOff
                                Separator {}
                                Separator {
                                    USE ORTHOGRAPHICCAMERA
                                    SoTransform { 
                                        translation -0.1 0.4 0 
                                        scaleFactor 0.005 0.005 0.005
                                    }
                                    SoFont {
                                        name "Arial : Bold"
                                        size 5
                                    }
                                    Material { diffuseColor 1 0 0 }
                                    SoText3 {
                                        justification LEFT
                                        string = SoGate {
                                            type SoMFString
                                            trigger = USE KEY_K.toggled
                                            input = SoConcatenate {
                                                type SoMFString
                                                input0 "Camera parameters:"
                                                input1 = SoCalculator {
                                                    A = USE SCENEMANAGER.position
                                                    expression "oA=-A"
                                                }.oA
                                                input2 = MultRotRot { rotationA = USE SCENEMANAGER.orientation }.inverse
                                                input3 ""
                                            }.output
                                        }.output
                                    }
                                }
                            }

                            # cursor showing the current goal of the boid flock
                            SoSwitch {
                                whichChild = SoOnOff {
                                    toggle = USE KEY_L.toggled
                                }.isOff
                                Separator {}
                                Separator {
                                    Transform { 
                                        scaleFactor = SoComposeVec3f {
                                            x = USE CHOREOGRAPHER.globalScale
                                            y = USE CHOREOGRAPHER.globalScale
                                            z = USE CHOREOGRAPHER.globalScale
                                        }.vector
                                    }
                                    Transform { translation = USE BOIDFLOCK.position }
                                    Transform { translation = USE BOIDFLOCK.goal }
                                    Material { diffuseColor 1 0 0 }
                                    Sphere { radius 0.01 }
                                }
                            }
                            
                            # HUD for occupancy info
                            SoSwitch {
                                whichChild = SoOnOff {
                                    toggle = USE KEY_H.toggled
                                }.isOn
                                Separator {}
                                Separator {
                                    USE ORTHOGRAPHICCAMERA
                                    SoTransform { translation -0.4 0.38 0 scaleFactor 1.0 1.2 1.0 } # for a 640/480 proportion
                                    #SoTransform { translation -0.422 0.38 0 scaleFactor 0.78 1.2 1.0 }  # for a 1680/1050 proportion
                                    DEF MV_OCCUPANCY MiniView {
                                        maxCoordinate = USE SCENEMANAGER.maxCoordinate
                                        tileSize 0.02
                                        defaultTileColor 0.15 0.15 0.15
                                        userTileColor [ 1 0 0, 0 0 1 ]
                                        fixTileColor 0.7 0.7 0.7
                                        positionColor [ 0 0 0, 1 1 1 ]
                                        # pathColor [ 0 0 1, 1 1 0 ] # TODO: implement
                                        transparency 0.2
                                        occupationInfo = USE SCENEMANAGER.playfieldInfo
                                        currentPosition = USE SCENEMANAGER.currentTileCoord
                                    }
                                }
                            }

                        } # end of Separator (child No. 0 of MAINSWITCH)

                        # error message display (child No. 1 of MAINSWITCH)
                        Separator{
                            USE ORTHOGRAPHICCAMERA
                            SoTransform { translation 0 0 0 scaleFactor 0.005 0.006 0.005 }
                            USE TEXTTEXTURE
                            USE TEXTMATERIAL
                            USE TEXTFONT
                            SoText3 {
                                justification CENTER
                                string [ "Initialization error", "Start or end tile missing" ]
                            }
                        }

                    } # end of main switch
                    SoRoute { from "SCENEMANAGER.initError" to "MAINSWITCH.whichChild" }

                    # sound effects
                    Separator {
                        # start game sound
                        DEF STARTGAMESOUND SoFMODSound {
                            filename "../apps/arpuppet/demo/monkeybridge/sound/startgame.mp3"
                            play = USE GAMEMANAGER.countdownFinished
                            loop FALSE
                            volume 1.0
                        }

                        # finish game sound
                        DEF FINISHGAMESOUND SoFMODSound {
                            filename "../apps/arpuppet/demo/monkeybridge/sound/victory.mp3"
                            play = SoBoolOperation {
                                a = SoSelectOne {
                                    type SoMFBool
                                    input = USE DIRECTOR.win
                                    index 0
                                }.output
                                b = SoSelectOne {
                                    type SoMFBool
                                    input = USE DIRECTOR.win
                                    index 1
                                }.output
                                operation A_OR_B
                            }.output
                            loop FALSE
                            volume 1.0
                        }

                        # ocean sound
                        DEF OCEANSOUND SoFMODSound {
                            filename "../apps/arpuppet/demo/monkeybridge/sound/ocean.mp3"
                            play = SoBoolOperation {
                                a = USE KEY_S.isPressed
                                b = USE FINISHGAMESOUND.play
                                operation NOT_A_AND_NOT_B
                            }.output
                            loop TRUE
                            volume 0.8
                        }

                        # place tile sound
                        DEF PLACETILESOUND SoFMODSound {
                            filename = SoGate {
                                type SoMFString
                                input "../apps/arpuppet/demo/monkeybridge/sound/tileplaced.mp3"
                                enable = SoSelectOne {
                                    type SoMFBool
                                    input [ FALSE, TRUE ]
                                    index = SoCalculator {
                                        a = SoDecomposeVec4f {
                                            vector = USE SCENEMANAGER.tileSnappedInfo
                                        }.z
                                        b = USE CHARACTERNUM.string
                                        expression [
                                            "ta = floor(a)"
                                            "oa = (ta==b || b==-1) ? 1 : 0"
                                        ]
                                    }.oa
                                }.output # end of SoSelectOne
                            }.output # end of SoGate
                            play = USE GAMEMANAGER.started
                            loop FALSE
                            volume 0.8
                        }

                        # sounds of character0
                        DEF CHARACTERSOUND0 SoFMODSound {
                            filename = SoSelectOne {
                                type SoMFString
                                input = SoConcatenate {
                                    type SoMFString
                                    input0 "../apps/arpuppet/demo/monkeybridge/sound/walk.mp3" # WALK_SOUND
                                    input1 "../apps/arpuppet/demo/monkeybridge/sound/walk_up.mp3" # WALK_UP_SOUND
                                    input2 "../apps/arpuppet/demo/monkeybridge/sound/jump_bang.mp3" # JUMP_UP_SOUND
                                    input3 "../apps/arpuppet/demo/monkeybridge/sound/jump_bang.mp3" # JUMP_DOWN_SOUND
                                    input4 "../apps/arpuppet/demo/monkeybridge/sound/fall_onto_board.mp3" # FALLING_ONTO_BOARD_SOUND
                                    input5 "../apps/arpuppet/demo/monkeybridge/sound/fall_into_water.mp3" # FALLING_INTO_WATER_SOUND
                                    input6 "../apps/arpuppet/demo/monkeybridge/sound/ohyeah.mp3" # WIN_SOUND
                                    input7 "../apps/arpuppet/demo/monkeybridge/sound/lose.mp3" # LOSE_SOUND
                                    input8 "../apps/arpuppet/demo/monkeybridge/sound/dunno.mp3" # DUNNO_SOUND
                                }.output
                                index = USE CHARACTER0.soundFileName
                            }.output
                            play = USE CHARACTER0.soundPlay
                            loop FALSE
                            volume = SoCalculator {
                                a = USE CHARACTERNUM.string
                                b 0 # for character 0
                                expression "oa = (a==b || a==-1) ? 0.8 : 0.2"
                            }.oa
                        }

                        # sounds of character1
                        DEF CHARACTERSOUND1 SoFMODSound {
                            filename = SoSelectOne {
                                type SoMFString
                                input = SoConcatenate {
                                    type SoMFString
                                    input0 "../apps/arpuppet/demo/monkeybridge/sound/walk.mp3" # WALK_SOUND
                                    input1 "../apps/arpuppet/demo/monkeybridge/sound/walk_up.mp3" # WALK_UP_SOUND
                                    input2 "../apps/arpuppet/demo/monkeybridge/sound/jump_bang.mp3" # JUMP_UP_SOUND
                                    input3 "../apps/arpuppet/demo/monkeybridge/sound/jump_bang.mp3" # JUMP_DOWN_SOUND
                                    input4 "../apps/arpuppet/demo/monkeybridge/sound/fall_onto_board.mp3" # FALLING_ONTO_BOARD_SOUND
                                    input5 "../apps/arpuppet/demo/monkeybridge/sound/fall_into_water.mp3" # FALLING_INTO_WATER_SOUND
                                    input6 "../apps/arpuppet/demo/monkeybridge/sound/ohyeah.mp3" # WIN_SOUND
                                    input7 "../apps/arpuppet/demo/monkeybridge/sound/lose.mp3" # LOSE_SOUND
                                    input8 "../apps/arpuppet/demo/monkeybridge/sound/dunno.mp3" # DUNNO_SOUND
                                }.output
                                index = USE CHARACTER1.soundFileName
                            }.output
                            play = USE CHARACTER1.soundPlay
                            loop FALSE
                            volume = SoCalculator {
                                a = USE CHARACTERNUM.string
                                b 1 # for character 1
                                expression "oa = (a==b || a==-1) ? 0.8 : 0.2"
                            }.oa
                        }

                        # debugger - connect field to debug to SoText3.string below
                        SoSeparator {
                            Transform { 
                                translation 0 0.3 0
                                scaleFactor 0.005 0.005 0.005
                            }
                            SoText3 {
                                string ""
                            }
                        }

                    }

                } # end of clientVolume

            } # end of windowKit

        } # end of windowGroup

    } # end of contextKit

} # end of applicationKit
