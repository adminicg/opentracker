#Inventor V2.1 ascii

DEF GPSEMULATOR SoApplicationKit 
{
    readOnly TRUE
    
    contextKit SoContextKit    
    {     
        windowGroup Group {
            # Keyboard listener node
            DEF KEY SoKeyToggle {}
            # city model
            SoAbortGroup {
                abortActions (CB|EVENT|PICK|EVENT3D)
                File { name "data/citymodel.iv" }
            }
            # ray picker
            DEF Picker SoRayPicker {
                active TRUE
                stations 3
                userId 0
                pickGraph Group { 
                    File { name "data/ground.iv" } 
                }
                input SCREEN
                coordinates NORMALIZED
            }
            # cursor of raypicker 
            Switch {
                whichChild = USE Picker.isPicking
                Group {}
                Separator {
                    Transform { translation = USE Picker.pickedPoint }
                    Transform { translation 0 15 0 }
                    Material { diffuseColor 1 1 0 emissiveColor 1 1 0 transparency 0.5 }
                    Cylinder { radius 1.5 height 30 }
                }
            }
            # Current position, set by clicking the button
            Separator {
                DEF ICON_TRANS Transform { 
                    translation = Gate { 
                        type SoMFVec3f
                        input = Gate { 
                            type SoMFVec3f
                            input = USE Picker.pickedPoint
                            enable = USE Picker.button
                        }.output
                        enable = USE KEY.shift
                    }.output
                }
                Transform { translation 0 5 0 }
                Material { diffuseColor 0 1 1 emissiveColor 0 1 1  }
                Cylinder { radius 1 height 10 }
            }     
            # heads up display
            Separator {
                OrthographicCamera { aspectRatio 1 viewportMapping ADJUST_CAMERA }                
                # legoman to set view direction of user
                Separator {
                    Transform { scaleFactor 0.1 0.1 0.1 translation -1 -0.8 -1 }
                    DEF Dragger SoRotateSphericalDragger {  }
                    # DEF ICON_ROT Transform { rotation = SoFactorRotation { axis Z rotation = USE Dragger.rotation }.remainder }
                    DEF ICON_ROT Transform { rotation =  USE Dragger.rotation}
                    Transform { scaleFactor 0.07 0.07 0.07 translation 0.2 1.2 -0.4 rotation 0 1 0 3.141592}
                    File { name "../signpost/legoman.iv" }
                }
                # position information
                Separator {                    
                    FontStyle { size 0.05 style BOLD }
                    Material { diffuseColor 1 1 1 }
                    Transform { translation 0.3 -0.91 0 }
                    AsciiText { string [ "Cursor", "GPS" ] }
                    Transform { translation 0.15 0 0 }
                    AsciiText {
                        string = Concatenate {
                            type SoMFString
                            input0 = USE Picker.pickedPoint
                            input1 = USE ICON_TRANS.translation
                        }.output
                    }
                    Transform { translation 0.3 -0.01 -1 }
                    Material { diffuseColor 1 1 1 transparency 0.5 }
                    Cube { width 1 height 0.15 depth 0.001 }
                }                
            }
        }
    }
}

#some debugging stuff
Separator {                    
            SoRouteDB {
              name "shift"
#              in = USE KEY.shift
            }            
            SoRouteDB {
              name "buttons"
              # in = USE Picker.button
            }            
            SoRouteDB {
              name "PickedPoint"
#              in = SoTrakEngine { station 4 }.translation
            }                        
}