#Inventor V2.1 ascii

SoClassLoader {
    className "TourGroup"
    fileName "ocar"
}            


DEF User SoApplicationKit {    

    contextKit SoContextKit {
        templatePipSheet
#include "userpip.iv"
# end auto generated pip sheet !



        windowGroup So3DSeparator {
            stations []
            blocked FALSE        

            DEF TOUR TourGroup {
                name = USE NAME.string
                userStation = USE STATION.string
                
                mode = Calculator {            
                    a = USE off.on
                    b = USE follow.on
                    c = USE guide.on
                    d = USE meet.on
                    expression "oa = 0*a + 1*b + 2*c + 3*d"
                }.oa
            
                activeNeighbor = USE userList.selected
            
                activePosition = SoTrakEngine { station = USE TOUR.activeStation }.translation
            
                listboxFeedback = USE destination.selected
                
                # not exactly loose coupling, but would require another construction somewhere otherwise...
                navigator USE NavKit
                
                userPosition = USE NavKit.userPosition
                userWaypoint = USE NavKit.currentWaypoint
                userDestination = USE NavKit.computedTarget
                currentPath = USE NavKit.path
                
                timeOut 30
            }
            
            # DIV group to communicate stuff !
            SoAbortGroup {
                abortActions ( RENDER | CB | BBOX | EVENT | PICK | MATRIX | EVENT3D )
                DEF TOURSPACE SoDivGroup {
                    multicastGroup "224.100.200.112"
                    port 7890
                    initFromMaster FALSE
                    active TRUE
                    isMaster TRUE
                    
                    DEF MEDIUM Text2 { 
                        string []
                    }
                }
            }
            
            SoRoute { from "TOUR.send" to "MEDIUM.string" }
            SoRoute { from "MEDIUM.string" to "TOUR.receive" }
            SoRoute { from "TOUR.neighbor" to "userList.values" }
            SoRoute { from "TOUR.activePosition" to "NavKit.destinationPosition" }
            
            # SoRouteDB { name "medium" in = USE MEDIUM.string }            
            # SoRouteDB { name "station" in = USE TOUR.activeStation }
            # SoRouteDB { name "neighbor" in = USE TOUR.activeNeighbor }
            # SoRouteDB { name "list" in = USE userList.selected }
            # SoRouteDB { name "position" in = USE NavKit.destinationPosition }
            
            # Legoman avatar
            #Switch {
            #    whichChild = USE avatar.on
            #    Group {}
            #    SoContextSwitch {
            #        index -5
            #        Group { # slave shows avatar
            #            Transform {
            #                translation = DEF user1pos SoTrakEngine { station 10 }.translation
            #                rotation = USE user1pos.rotation
            #            }
            #            File { name "../apps/ocar/graphics/legoman.iv" }
            #        }
            #        Group {} # master never shows avatar
            #    }
            #}
            
            # Graphic for denoting the selected user
            DEF DB1 Switch {
                whichChild = DEF DB2 SoCalculator {
                    a = USE TOUR.activeStation
                    b = USE avatar.on
                    expression "oa = (a == -1 || b == 0)?(-1):(-3)"
                }.oa
                SoTrackedArtifactKit {
                    station = USE TOUR.activeStation
                    geometry Separator {
                        File { name "graphics/pointer.iv" }
                   }
                }
            }
            
            # SoRouteDB { name "DB1" in = USE DB1.whichChild }
            # SoRouteDB { name "DB2" in = USE DB2.oa }
        }
    }
    appGeom Separator {
            Texture2 { filename "graphics/Collaboration_high.gif" }
    }
}
