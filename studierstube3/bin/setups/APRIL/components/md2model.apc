<?xml version="1.0" encoding="UTF-8"?>
<!--
A simple 3d-model, loaded from an external file. The model can be positioned, rotated, scaled,
changed in transparency and switched on/off.
Children are affected by translation and rotation, but not scale or transparency settings
of parent model.
-->
<component id="md2model" xmlns="http://www.studierstube.org/april" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.studierstube.org/april ../../../studierstube/tools/april/april-component.xsd">
    <interface>
        <field type="SFVec3f" id="position" default="0.0 0.0 0.0"/>
        <field type="SFRotation" id="orientation" default="1.0 0.0 0.0 0.0"/>
        <field type="SFVec3f" id="scale" default="1.0 1.0 1.0"/>
        <field id="transparency" type="SFFloat" default="0.0"/>
        <field id="visible" type="SFBool" default="TRUE"/>
        <field type="SFString" id="animname" default=""/>
        <field type="SFFloat" id="animtime" default="1.0"/>
        <input type="SFString" id="meshname" const="true"/>
        <input type="SFString" id="skinname" const="true"/>
        <part id="children"/>
    </interface>
    <implementation>

DEF <id/> Separator {
    DEF <id/>_Switch Switch {
        whichChild 1 = DEF <id/>_Bool BoolOperation { # just to convert from Bool to Int32
            a <in id="visible"/>
            operation A
        }.output
        
        # Dummy Child for switching off
        Group {}
        
        # actual content
        Group {
            DEF <id/>_Transform Transform {
                translation <in id="position"/>
                rotation <in id="orientation"/>
            }
            Separator {
                DEF <id/>_Scale Scale {
                    scaleFactor <in id="scale"/>
                }
                DEF <id/>_Material Material {
                    transparency <in id="transparency"/>
                }
                DEF <id/>_md2 SoMD2NodeKit{
                    meshname <in id="meshname"/>
                    skinname <in id="skinname"/>
                    animname <in id="animname"/>
                    animtime <in id="animtime"/>
                }
            }
            <sub id="children"/>
        }
    }
}

<out id="position">
            <id/>_Transform.translation</out>
        <out id="orientation">
            <id/>_Transform.rotation</out>
        <out id="scale">
            <id/>_Scale.scaleFactor</out>
        <out id="transparency">
            <id/>_Material.transparency</out>
        <out id="visible">
            <id/>_Bool.a</out>
        <out id="animname">
            <id/>_md2.animname</out>
        <out id="animtime">
            <id/>_md2.animtime</out>
    </implementation>
</component>
