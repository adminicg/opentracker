## ===========================================================================
##  Copyright (c) 2000,2001
##  Vienna University of Technology
##  
##  This software is provided AS IS, without any express or implied
##  warranty.  In no event will the authors or the Vienna University of
##  Technology be held liable for any damages or loss of profit arising
##  from the use or non-fitness for a particular purpose of this software.
## ===========================================================================
##  NAME:       Config.Linux
##  TYPE:       makefile
##  PROJECT:    OpenTracker
##  CONTENT:    Platform-specific makefile definitions for GNU/Linux
## ===========================================================================
##  AUTHORS:    jp      Jan Prikryl
##              gr      Gerhard Reitmayr
## ===========================================================================
##  HISTORY:
##
##  12-Jun-01 18:21:00  gr     copied from studierstube
## ===========================================================================

## ---------------------------------------------------------------------------
##  OPERATING SYSTEM
## ---------------------------------------------------------------------------

OS_IRIX  = 
OS_LINUX = TRUE
SUBDIRS_OSDEP = $(SUBDIRS_LINUX)

## ---------------------------------------------------------------------------
##  COMPILER AND LINKER SETTINGS
## ---------------------------------------------------------------------------

CC      = gcc
CXX     = g++
LD      = ld

LDSHARED        = $(LD) -shared 
CXXLINK         = $(CXX) -rdynamic
LDFLAGS         = $(LD_SHARED_LIBS) $(LD_LIBS)

## ---------------------------------------------------------------------------
##  C PREPROCESSOR PARAMETERS
## ---------------------------------------------------------------------------
CPPFLAGS = \
           -I/usr/include \
           $(OT_STD_INCLUDES) \
           -D_LINUX_SOURCE $(OT_OPT)
	
## These are empty; will be redefined in sub-makefiles if necessary
PRVFLAGS =

## ---------------------------------------------------------------------------
##  COMPILER PARAMETERS
## ---------------------------------------------------------------------------
##  For production use you may want to try 
##  CXXOPTS = -O3 -DNDEBUG 
##  CXXARCH  = -mieee-fp -malign-double -march=i686
CXXWARN  = 
CXXOPTS  = -g 
CXXARCH  = 
CXXPARMS = -Wp,-MD,.deps/$(*F).pp
CXXFLAGS = $(CXXWARN) $(CXXOPTS) $(CXXARCH) $(CXXPARMS)

## ---------------------------------------------------------------------------
##  LIBRARIES TO LINK WITH
## ---------------------------------------------------------------------------
LD_LIBS = \
        -L$(ACE_ROOT)/ace -L$(XERCESC_ROOT)/lib \
        $(OT_OPTIONAL_LIB) \
        -lACE -l$(XERCESC_LIB) -lncurses -lm 

## ---------------------------------------------------------------------------
## EXTRA PARAMETERS TO CREATE SHARED LIB FROM STATIC LIB
## ---------------------------------------------------------------------------
LD_SHARED_LIBS = \
        --whole-archive $(OT_LIB_DIR)/libOpenTracker.a --no-whole-archive

## ---------------------------------------------------------------------------
##  SUFFIXES
##
##  Due to SGI make support we are obliged to use old suffix rules for
##  compiling .cxx -> .o . GNU make des not know about .cxx being a valid
##  suffix.
## ---------------------------------------------------------------------------
##.SUFFIXES: .cxx

## ---------------------------------------------------------------------------
##  NOPRINT
##
##  GNU make prints "make[]: Entering directory ...". This switches these
##  messages off.
## ---------------------------------------------------------------------------
NOPRINT = --no-print-directory

## ---------------------------------------------------------------------------
##  DEPFILES
##
##  As we have to support the braindead SGI make, we have to keep track of
##  two different dependency generating mechanisms: GNU can only generate
##  per-sourcefile dependency includes, while MipsPro can do both per-source
##  and single dependency file. The latter option has to be used with SGI
##  make - as the make does not allow either wildcard expansion in include
##  directive nor including more than a single file with one include command.
##
##  On Linux, dependencies are stored in subdirectory .deps. The second line
##  is a piece of black magic taken out from automake which creates the .deps
##  directory on the fly.
##
##  Also, remove the built in implicit rule compiling *.cpp to *.o
##  when *.o is dependency of some binary file. This implicit rule has the
##  undesriable effect that having files <name>.cxx and <name>.cpp (see
##  some of the Win32 enabled STB applications), <name>.o would be
##  produced from <name>.cpp, which is not exactly what we want.
## ---------------------------------------------------------------------------
DEPFILES = .deps/*.P
_DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

%.o: %.cxx
	@echo "--- $< ---"
	$(CXX) -c $(DEPGEN) $(CXXFLAGS) $(CPPFLAGS) $(PRVFLAGS) $< -o $@
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
          | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
          >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.o: %.cpp

## ===========================================================================
##  End of Config.Linux
## ===========================================================================
