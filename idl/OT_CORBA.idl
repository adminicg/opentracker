// CORBAmodule.idl
module CORBAModule {
  const string CORBAModule__doc__ = "This is the CORBA Module for OpenTracker";

  typedef float Position[3];
  typedef float Orientation[4];
  typedef float Timestamp;
  typedef short Button;
  typedef float Confidence;
  
  interface Event {
    boolean hasAttribute(in string name);
    boolean delAttribute(in string name);
    boolean renAttribute(in string oldName, in string newName);
    void clearAttributes();
    void printout();
    string getPrintOut();
    void timeStamp();
    long getSize();
    Position getPosition();
    Orientation getOrientation();
    float getConfidence();
    Button getButton();
    void setPosition(in Position pos);
    void setOrientation(in Orientation ori);
    void setConfidence(in float value);
    void setButton(in Button value);
    boolean addAttribute(in string type, in string name, in string value);
    string getAttributeValueString(in string name);
  };
  const string Event__doc__ = "The Event interface is a CORBA equivalent of the Event class used in OpenTracker";

  interface OTNode {
    void push(in Event ev);
  };
  const string OTNode__doc__ = "The OTNode is the superclass of all the OpenTracker nodes that are also CORBA objects.";

  interface OTSource : OTNode { };

  interface OTSink : OTNode { };

  interface Node {
    void register(in OTNode node);
    void deregister(in OTNode node);
  };

  interface Source : Node { };

  interface Sink : Node { };
};
