// This file is generated by omniidl (C++ backend)- omniORB_4_0. Do not edit.

#include "OT_CORBA.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_0;



#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace CORBAModule { 
  extern const char * CORBAModule__doc__ = "This is the CORBA Module for OpenTracker";
} 
#else
const char * CORBAModule::CORBAModule__doc__ = "This is the CORBA Module for OpenTracker";
#endif

CORBAModule::Event_ptr CORBAModule::Event_Helper::_nil() {
  return ::CORBAModule::Event::_nil();
}

CORBA::Boolean CORBAModule::Event_Helper::is_nil(::CORBAModule::Event_ptr p) {
  return CORBA::is_nil(p);

}

void CORBAModule::Event_Helper::release(::CORBAModule::Event_ptr p) {
  CORBA::release(p);
}

void CORBAModule::Event_Helper::duplicate(::CORBAModule::Event_ptr p) {
  if( p && !p->_NP_is_nil() )  omni::duplicateObjRef(p);
}

void CORBAModule::Event_Helper::marshalObjRef(::CORBAModule::Event_ptr obj, cdrStream& s) {
  ::CORBAModule::Event::_marshalObjRef(obj, s);
}

CORBAModule::Event_ptr CORBAModule::Event_Helper::unmarshalObjRef(cdrStream& s) {
  return ::CORBAModule::Event::_unmarshalObjRef(s);
}

CORBAModule::Event_ptr
CORBAModule::Event::_duplicate(::CORBAModule::Event_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);

  return obj;
}


CORBAModule::Event_ptr
CORBAModule::Event::_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


CORBAModule::Event_ptr
CORBAModule::Event::_unchecked_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}


CORBAModule::Event_ptr
CORBAModule::Event::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_Event _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_Event* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_Event;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* CORBAModule::Event::_PD_repoId = "IDL:CORBAModule/Event:1.0";


CORBAModule::_objref_Event::~_objref_Event() {}


CORBAModule::_objref_Event::_objref_Event(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::CORBAModule::Event::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
CORBAModule::_objref_Event::_ptrToObjRef(const char* id)
{
  if( id == ::CORBAModule::Event::_PD_repoId )
    return (::CORBAModule::Event_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::CORBAModule::Event::_PD_repoId) )
    return (::CORBAModule::Event_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cstring
class _0RL_cd_FAAEBF9858B03965_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  CORBA::String_var arg_0_;
  const char* arg_0;
  CORBA::Boolean result;
};

void _0RL_cd_FAAEBF9858B03965_00000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_FAAEBF9858B03965_00000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_FAAEBF9858B03965_00000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_FAAEBF9858B03965_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_00000000* tcd = (_0RL_cd_FAAEBF9858B03965_00000000*)cd;
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  tcd->result = impl->hasAttribute(tcd->arg_0);


}

CORBA::Boolean CORBAModule::_objref_Event::hasAttribute(const char* name)
{
  _0RL_cd_FAAEBF9858B03965_00000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_10000000, "hasAttribute", 13);
  _call_desc.arg_0 = name;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_20000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_00000000* tcd = (_0RL_cd_FAAEBF9858B03965_00000000*)cd;
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  tcd->result = impl->delAttribute(tcd->arg_0);


}

CORBA::Boolean CORBAModule::_objref_Event::delAttribute(const char* name)
{
  _0RL_cd_FAAEBF9858B03965_00000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_20000000, "delAttribute", 13);
  _call_desc.arg_0 = name;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cstring_i_cstring
class _0RL_cd_FAAEBF9858B03965_30000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_30000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  CORBA::String_var arg_0_;
  const char* arg_0;
  CORBA::String_var arg_1_;
  const char* arg_1;
  CORBA::Boolean result;
};

void _0RL_cd_FAAEBF9858B03965_30000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  _n.marshalString(arg_1,0);

}

void _0RL_cd_FAAEBF9858B03965_30000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();

}

void _0RL_cd_FAAEBF9858B03965_30000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_FAAEBF9858B03965_30000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_40000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_30000000* tcd = (_0RL_cd_FAAEBF9858B03965_30000000*)cd;
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  tcd->result = impl->renAttribute(tcd->arg_0, tcd->arg_1);


}

CORBA::Boolean CORBAModule::_objref_Event::renAttribute(const char* oldName, const char* newName)
{
  _0RL_cd_FAAEBF9858B03965_30000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_40000000, "renAttribute", 13);
  _call_desc.arg_0 = oldName;
  _call_desc.arg_1 = newName;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void
class _0RL_cd_FAAEBF9858B03965_50000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_50000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  
    
  
  
};

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_60000000(omniCallDescriptor* cd, omniServant* svnt)
{
  
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  impl->clearAttributes();


}

void CORBAModule::_objref_Event::clearAttributes()
{
  _0RL_cd_FAAEBF9858B03965_50000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_60000000, "clearAttributes", 16);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  impl->printout();


}

void CORBAModule::_objref_Event::printout()
{
  _0RL_cd_FAAEBF9858B03965_50000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_70000000, "printout", 9);


  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  _cstring
class _0RL_cd_FAAEBF9858B03965_80000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_80000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  CORBA::String_var result;
};

void _0RL_cd_FAAEBF9858B03965_80000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(result,0);

}

void _0RL_cd_FAAEBF9858B03965_80000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalString(0);

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_90000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_80000000* tcd = (_0RL_cd_FAAEBF9858B03965_80000000*)cd;
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  tcd->result = impl->getPrintOut();


}

char* CORBAModule::_objref_Event::getPrintOut()
{
  _0RL_cd_FAAEBF9858B03965_80000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_90000000, "getPrintOut", 12);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_a0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  impl->timeStamp();


}

void CORBAModule::_objref_Event::timeStamp()
{
  _0RL_cd_FAAEBF9858B03965_50000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_a0000000, "timeStamp", 10);


  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  _clong
class _0RL_cd_FAAEBF9858B03965_b0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_b0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  CORBA::Long result;
};

void _0RL_cd_FAAEBF9858B03965_b0000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_FAAEBF9858B03965_b0000000::unmarshalReturnedValues(cdrStream& _n)
{
  (CORBA::Long&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_c0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_b0000000* tcd = (_0RL_cd_FAAEBF9858B03965_b0000000*)cd;
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  tcd->result = impl->getSize();


}

CORBA::Long CORBAModule::_objref_Event::getSize()
{
  _0RL_cd_FAAEBF9858B03965_b0000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_c0000000, "getSize", 8);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _a3_cfloat
class _0RL_cd_FAAEBF9858B03965_d0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_d0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  CORBAModule::Position_var result;
};

void _0RL_cd_FAAEBF9858B03965_d0000000::marshalReturnedValues(cdrStream& _n)
{
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((CORBA::Octet*)((CORBA::Float*)result),12,omni::ALIGN_4);
  }
  else 
  {
    for (CORBA::ULong _i0 = 0;_i0 < 3;_i0++){
      result[_i0] >>= _n;
    }
  }

}

void _0RL_cd_FAAEBF9858B03965_d0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = CORBAModule::Position_alloc();
  _n.unmarshalArrayFloat((CORBA::Float*)((CORBA::Float*)result), 3);

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_e0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_d0000000* tcd = (_0RL_cd_FAAEBF9858B03965_d0000000*)cd;
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  tcd->result = impl->getPosition();


}

CORBAModule::Position_slice* CORBAModule::_objref_Event::getPosition()
{
  _0RL_cd_FAAEBF9858B03965_d0000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_e0000000, "getPosition", 12);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _a4_cfloat
class _0RL_cd_FAAEBF9858B03965_f0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_f0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  CORBAModule::Orientation_var result;
};

void _0RL_cd_FAAEBF9858B03965_f0000000::marshalReturnedValues(cdrStream& _n)
{
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((CORBA::Octet*)((CORBA::Float*)result),16,omni::ALIGN_4);
  }
  else 
  {
    for (CORBA::ULong _i0 = 0;_i0 < 4;_i0++){
      result[_i0] >>= _n;
    }
  }

}

void _0RL_cd_FAAEBF9858B03965_f0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = CORBAModule::Orientation_alloc();
  _n.unmarshalArrayFloat((CORBA::Float*)((CORBA::Float*)result), 4);

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_01000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_f0000000* tcd = (_0RL_cd_FAAEBF9858B03965_f0000000*)cd;
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  tcd->result = impl->getOrientation();


}

CORBAModule::Orientation_slice* CORBAModule::_objref_Event::getOrientation()
{
  _0RL_cd_FAAEBF9858B03965_f0000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_01000000, "getOrientation", 15);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cfloat
class _0RL_cd_FAAEBF9858B03965_11000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_11000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  CORBA::Float result;
};

void _0RL_cd_FAAEBF9858B03965_11000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_FAAEBF9858B03965_11000000::unmarshalReturnedValues(cdrStream& _n)
{
  (CORBA::Float&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_21000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_11000000* tcd = (_0RL_cd_FAAEBF9858B03965_11000000*)cd;
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  tcd->result = impl->getConfidence();


}

CORBA::Float CORBAModule::_objref_Event::getConfidence()
{
  _0RL_cd_FAAEBF9858B03965_11000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_21000000, "getConfidence", 14);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cshort
class _0RL_cd_FAAEBF9858B03965_31000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_31000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  CORBAModule::Button result;
};

void _0RL_cd_FAAEBF9858B03965_31000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_FAAEBF9858B03965_31000000::unmarshalReturnedValues(cdrStream& _n)
{
  (CORBAModule::Button&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_41000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_31000000* tcd = (_0RL_cd_FAAEBF9858B03965_31000000*)cd;
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  tcd->result = impl->getButton();


}

CORBAModule::Button CORBAModule::_objref_Event::getButton()
{
  _0RL_cd_FAAEBF9858B03965_31000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_41000000, "getButton", 10);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  void_i_a3_cfloat
class _0RL_cd_FAAEBF9858B03965_51000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_51000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  CORBAModule::Position arg_0_;
  const CORBAModule::Position_slice* arg_0;
};

void _0RL_cd_FAAEBF9858B03965_51000000::marshalArguments(cdrStream& _n)
{
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((CORBA::Octet*)((CORBA::Float*)arg_0),12,omni::ALIGN_4);
  }
  else 
  {
    for (CORBA::ULong _i0 = 0;_i0 < 3;_i0++){
      arg_0[_i0] >>= _n;
    }
  }

}

void _0RL_cd_FAAEBF9858B03965_51000000::unmarshalArguments(cdrStream& _n)
{
  _n.unmarshalArrayFloat((CORBA::Float*)((CORBA::Float*)arg_0_), 3);
  arg_0 = &arg_0_[0];

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_61000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_51000000* tcd = (_0RL_cd_FAAEBF9858B03965_51000000*)cd;
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  impl->setPosition(tcd->arg_0);


}

void CORBAModule::_objref_Event::setPosition(const Position pos)
{
  _0RL_cd_FAAEBF9858B03965_51000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_61000000, "setPosition", 12);
  _call_desc.arg_0 = &pos[0];

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  void_i_a4_cfloat
class _0RL_cd_FAAEBF9858B03965_71000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_71000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  CORBAModule::Orientation arg_0_;
  const CORBAModule::Orientation_slice* arg_0;
};

void _0RL_cd_FAAEBF9858B03965_71000000::marshalArguments(cdrStream& _n)
{
  if (! _n.marshal_byte_swap()) {
    _n.put_octet_array((CORBA::Octet*)((CORBA::Float*)arg_0),16,omni::ALIGN_4);
  }
  else 
  {
    for (CORBA::ULong _i0 = 0;_i0 < 4;_i0++){
      arg_0[_i0] >>= _n;
    }
  }

}

void _0RL_cd_FAAEBF9858B03965_71000000::unmarshalArguments(cdrStream& _n)
{
  _n.unmarshalArrayFloat((CORBA::Float*)((CORBA::Float*)arg_0_), 4);
  arg_0 = &arg_0_[0];

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_81000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_71000000* tcd = (_0RL_cd_FAAEBF9858B03965_71000000*)cd;
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  impl->setOrientation(tcd->arg_0);


}

void CORBAModule::_objref_Event::setOrientation(const Orientation ori)
{
  _0RL_cd_FAAEBF9858B03965_71000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_81000000, "setOrientation", 15);
  _call_desc.arg_0 = &ori[0];

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  void_i_cfloat
class _0RL_cd_FAAEBF9858B03965_91000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_91000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  CORBA::Float arg_0;
};

void _0RL_cd_FAAEBF9858B03965_91000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_FAAEBF9858B03965_91000000::unmarshalArguments(cdrStream& _n)
{
  (CORBA::Float&)arg_0 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_a1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_91000000* tcd = (_0RL_cd_FAAEBF9858B03965_91000000*)cd;
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  impl->setConfidence(tcd->arg_0);


}

void CORBAModule::_objref_Event::setConfidence(CORBA::Float value)
{
  _0RL_cd_FAAEBF9858B03965_91000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_a1000000, "setConfidence", 14);
  _call_desc.arg_0 = value;

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  void_i_cshort
class _0RL_cd_FAAEBF9858B03965_b1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_b1000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  CORBAModule::Button arg_0;
};

void _0RL_cd_FAAEBF9858B03965_b1000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_FAAEBF9858B03965_b1000000::unmarshalArguments(cdrStream& _n)
{
  (CORBAModule::Button&)arg_0 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_c1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_b1000000* tcd = (_0RL_cd_FAAEBF9858B03965_b1000000*)cd;
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  impl->setButton(tcd->arg_0);


}

void CORBAModule::_objref_Event::setButton(Button value)
{
  _0RL_cd_FAAEBF9858B03965_b1000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_c1000000, "setButton", 10);
  _call_desc.arg_0 = value;

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cstring_i_cstring_i_cstring
class _0RL_cd_FAAEBF9858B03965_d1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_d1000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  CORBA::String_var arg_0_;
  const char* arg_0;
  CORBA::String_var arg_1_;
  const char* arg_1;
  CORBA::String_var arg_2_;
  const char* arg_2;
  CORBA::Boolean result;
};

void _0RL_cd_FAAEBF9858B03965_d1000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  _n.marshalString(arg_1,0);
  _n.marshalString(arg_2,0);

}

void _0RL_cd_FAAEBF9858B03965_d1000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();
  arg_2_ = _n.unmarshalString(0);
  arg_2 = arg_2_.in();

}

void _0RL_cd_FAAEBF9858B03965_d1000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_FAAEBF9858B03965_d1000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_e1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_d1000000* tcd = (_0RL_cd_FAAEBF9858B03965_d1000000*)cd;
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  tcd->result = impl->addAttribute(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

CORBA::Boolean CORBAModule::_objref_Event::addAttribute(const char* type, const char* name, const char* value)
{
  _0RL_cd_FAAEBF9858B03965_d1000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_e1000000, "addAttribute", 13);
  _call_desc.arg_0 = type;
  _call_desc.arg_1 = name;
  _call_desc.arg_2 = value;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cstring_i_cstring
class _0RL_cd_FAAEBF9858B03965_f1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_f1000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  CORBA::String_var arg_0_;
  const char* arg_0;
  CORBA::String_var result;
};

void _0RL_cd_FAAEBF9858B03965_f1000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_FAAEBF9858B03965_f1000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_FAAEBF9858B03965_f1000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(result,0);

}

void _0RL_cd_FAAEBF9858B03965_f1000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalString(0);

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_02000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_f1000000* tcd = (_0RL_cd_FAAEBF9858B03965_f1000000*)cd;
  CORBAModule::_impl_Event* impl = (CORBAModule::_impl_Event*) svnt->_ptrToInterface(CORBAModule::Event::_PD_repoId);
  tcd->result = impl->getAttributeValueString(tcd->arg_0);


}

char* CORBAModule::_objref_Event::getAttributeValueString(const char* name)
{
  _0RL_cd_FAAEBF9858B03965_f1000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_02000000, "getAttributeValueString", 24);
  _call_desc.arg_0 = name;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
CORBAModule::_pof_Event::~_pof_Event() {}


omniObjRef*
CORBAModule::_pof_Event::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::CORBAModule::_objref_Event(ior, id);
}


CORBA::Boolean
CORBAModule::_pof_Event::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::CORBAModule::Event::_PD_repoId) )
    return 1;
  
  return 0;
}

const CORBAModule::_pof_Event _the_pof_CORBAModule_mEvent;

CORBAModule::_impl_Event::~_impl_Event() {}


CORBA::Boolean
CORBAModule::_impl_Event::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "hasAttribute") ) {

    _0RL_cd_FAAEBF9858B03965_00000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_10000000, "hasAttribute", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "delAttribute") ) {

    _0RL_cd_FAAEBF9858B03965_00000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_20000000, "delAttribute", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "renAttribute") ) {

    _0RL_cd_FAAEBF9858B03965_30000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_40000000, "renAttribute", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "clearAttributes") ) {

    _0RL_cd_FAAEBF9858B03965_50000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_60000000, "clearAttributes", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "printout") ) {

    _0RL_cd_FAAEBF9858B03965_50000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_70000000, "printout", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getPrintOut") ) {

    _0RL_cd_FAAEBF9858B03965_80000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_90000000, "getPrintOut", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "timeStamp") ) {

    _0RL_cd_FAAEBF9858B03965_50000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_a0000000, "timeStamp", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getSize") ) {

    _0RL_cd_FAAEBF9858B03965_b0000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_c0000000, "getSize", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getPosition") ) {

    _0RL_cd_FAAEBF9858B03965_d0000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_e0000000, "getPosition", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getOrientation") ) {

    _0RL_cd_FAAEBF9858B03965_f0000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_01000000, "getOrientation", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getConfidence") ) {

    _0RL_cd_FAAEBF9858B03965_11000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_21000000, "getConfidence", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getButton") ) {

    _0RL_cd_FAAEBF9858B03965_31000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_41000000, "getButton", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setPosition") ) {

    _0RL_cd_FAAEBF9858B03965_51000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_61000000, "setPosition", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setOrientation") ) {

    _0RL_cd_FAAEBF9858B03965_71000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_81000000, "setOrientation", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setConfidence") ) {

    _0RL_cd_FAAEBF9858B03965_91000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_a1000000, "setConfidence", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setButton") ) {

    _0RL_cd_FAAEBF9858B03965_b1000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_c1000000, "setButton", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "addAttribute") ) {

    _0RL_cd_FAAEBF9858B03965_d1000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_e1000000, "addAttribute", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getAttributeValueString") ) {

    _0RL_cd_FAAEBF9858B03965_f1000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_02000000, "getAttributeValueString", 24, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
CORBAModule::_impl_Event::_ptrToInterface(const char* id)
{
  if( id == ::CORBAModule::Event::_PD_repoId )
    return (::CORBAModule::_impl_Event*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::CORBAModule::Event::_PD_repoId) )
    return (::CORBAModule::_impl_Event*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
CORBAModule::_impl_Event::_mostDerivedRepoId()
{
  return ::CORBAModule::Event::_PD_repoId;
}

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace CORBAModule { 
  extern const char * Event__doc__ = "The Event interface is a CORBA equivalent of the Event class used in OpenTracker";
} 
#else
const char * CORBAModule::Event__doc__ = "The Event interface is a CORBA equivalent of the Event class used in OpenTracker";
#endif

CORBAModule::OTNode_ptr CORBAModule::OTNode_Helper::_nil() {
  return ::CORBAModule::OTNode::_nil();
}

CORBA::Boolean CORBAModule::OTNode_Helper::is_nil(::CORBAModule::OTNode_ptr p) {
  return CORBA::is_nil(p);

}

void CORBAModule::OTNode_Helper::release(::CORBAModule::OTNode_ptr p) {
  CORBA::release(p);
}

void CORBAModule::OTNode_Helper::duplicate(::CORBAModule::OTNode_ptr p) {
  if( p && !p->_NP_is_nil() )  omni::duplicateObjRef(p);
}

void CORBAModule::OTNode_Helper::marshalObjRef(::CORBAModule::OTNode_ptr obj, cdrStream& s) {
  ::CORBAModule::OTNode::_marshalObjRef(obj, s);
}

CORBAModule::OTNode_ptr CORBAModule::OTNode_Helper::unmarshalObjRef(cdrStream& s) {
  return ::CORBAModule::OTNode::_unmarshalObjRef(s);
}

CORBAModule::OTNode_ptr
CORBAModule::OTNode::_duplicate(::CORBAModule::OTNode_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);

  return obj;
}


CORBAModule::OTNode_ptr
CORBAModule::OTNode::_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


CORBAModule::OTNode_ptr
CORBAModule::OTNode::_unchecked_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}


CORBAModule::OTNode_ptr
CORBAModule::OTNode::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_OTNode _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_OTNode* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_OTNode;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* CORBAModule::OTNode::_PD_repoId = "IDL:CORBAModule/OTNode:1.0";


CORBAModule::_objref_OTNode::~_objref_OTNode() {}


CORBAModule::_objref_OTNode::_objref_OTNode(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::CORBAModule::OTNode::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
CORBAModule::_objref_OTNode::_ptrToObjRef(const char* id)
{
  if( id == ::CORBAModule::OTNode::_PD_repoId )
    return (::CORBAModule::OTNode_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::CORBAModule::OTNode::_PD_repoId) )
    return (::CORBAModule::OTNode_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  void_i_cCORBAModule_mEvent
class _0RL_cd_FAAEBF9858B03965_12000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_12000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  CORBAModule::Event_var arg_0_;
  CORBAModule::Event_ptr arg_0;
};

void _0RL_cd_FAAEBF9858B03965_12000000::marshalArguments(cdrStream& _n)
{
  CORBAModule::Event::_marshalObjRef(arg_0,_n);

}

void _0RL_cd_FAAEBF9858B03965_12000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = CORBAModule::Event::_unmarshalObjRef(_n);
  arg_0 = arg_0_.in();

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_22000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_12000000* tcd = (_0RL_cd_FAAEBF9858B03965_12000000*)cd;
  CORBAModule::_impl_OTNode* impl = (CORBAModule::_impl_OTNode*) svnt->_ptrToInterface(CORBAModule::OTNode::_PD_repoId);
  impl->push(tcd->arg_0);


}

void CORBAModule::_objref_OTNode::push(Event_ptr ev)
{
  _0RL_cd_FAAEBF9858B03965_12000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_22000000, "push", 5);
  _call_desc.arg_0 = ev;

  _invoke(_call_desc);



}
CORBAModule::_pof_OTNode::~_pof_OTNode() {}


omniObjRef*
CORBAModule::_pof_OTNode::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::CORBAModule::_objref_OTNode(ior, id);
}


CORBA::Boolean
CORBAModule::_pof_OTNode::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::CORBAModule::OTNode::_PD_repoId) )
    return 1;
  
  return 0;
}

const CORBAModule::_pof_OTNode _the_pof_CORBAModule_mOTNode;

CORBAModule::_impl_OTNode::~_impl_OTNode() {}


CORBA::Boolean
CORBAModule::_impl_OTNode::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "push") ) {

    _0RL_cd_FAAEBF9858B03965_12000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_22000000, "push", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
CORBAModule::_impl_OTNode::_ptrToInterface(const char* id)
{
  if( id == ::CORBAModule::OTNode::_PD_repoId )
    return (::CORBAModule::_impl_OTNode*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::CORBAModule::OTNode::_PD_repoId) )
    return (::CORBAModule::_impl_OTNode*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
CORBAModule::_impl_OTNode::_mostDerivedRepoId()
{
  return ::CORBAModule::OTNode::_PD_repoId;
}

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace CORBAModule { 
  extern const char * OTNode__doc__ = "The OTNode is the superclass of all the OpenTracker nodes that are also CORBA objects.";
} 
#else
const char * CORBAModule::OTNode__doc__ = "The OTNode is the superclass of all the OpenTracker nodes that are also CORBA objects.";
#endif

CORBAModule::OTSource_ptr CORBAModule::OTSource_Helper::_nil() {
  return ::CORBAModule::OTSource::_nil();
}

CORBA::Boolean CORBAModule::OTSource_Helper::is_nil(::CORBAModule::OTSource_ptr p) {
  return CORBA::is_nil(p);

}

void CORBAModule::OTSource_Helper::release(::CORBAModule::OTSource_ptr p) {
  CORBA::release(p);
}

void CORBAModule::OTSource_Helper::duplicate(::CORBAModule::OTSource_ptr p) {
  if( p && !p->_NP_is_nil() )  omni::duplicateObjRef(p);
}

void CORBAModule::OTSource_Helper::marshalObjRef(::CORBAModule::OTSource_ptr obj, cdrStream& s) {
  ::CORBAModule::OTSource::_marshalObjRef(obj, s);
}

CORBAModule::OTSource_ptr CORBAModule::OTSource_Helper::unmarshalObjRef(cdrStream& s) {
  return ::CORBAModule::OTSource::_unmarshalObjRef(s);
}

CORBAModule::OTSource_ptr
CORBAModule::OTSource::_duplicate(::CORBAModule::OTSource_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);

  return obj;
}


CORBAModule::OTSource_ptr
CORBAModule::OTSource::_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


CORBAModule::OTSource_ptr
CORBAModule::OTSource::_unchecked_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}


CORBAModule::OTSource_ptr
CORBAModule::OTSource::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_OTSource _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_OTSource* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_OTSource;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* CORBAModule::OTSource::_PD_repoId = "IDL:CORBAModule/OTSource:1.0";


CORBAModule::_objref_OTSource::~_objref_OTSource() {}


CORBAModule::_objref_OTSource::_objref_OTSource(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::CORBAModule::OTSource::_PD_repoId, ior, id, 1),
   OMNIORB_BASE_CTOR(CORBAModule::)_objref_OTNode(ior, id)
   
{
  _PR_setobj(this);
}

void*
CORBAModule::_objref_OTSource::_ptrToObjRef(const char* id)
{
  if( id == ::CORBAModule::OTSource::_PD_repoId )
    return (::CORBAModule::OTSource_ptr) this;
  if( id == ::CORBAModule::OTNode::_PD_repoId )
    return (::CORBAModule::OTNode_ptr) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::CORBAModule::OTSource::_PD_repoId) )
    return (::CORBAModule::OTSource_ptr) this;
  if( omni::strMatch(id, ::CORBAModule::OTNode::_PD_repoId) )
    return (::CORBAModule::OTNode_ptr) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

CORBAModule::_pof_OTSource::~_pof_OTSource() {}


omniObjRef*
CORBAModule::_pof_OTSource::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::CORBAModule::_objref_OTSource(ior, id);
}


CORBA::Boolean
CORBAModule::_pof_OTSource::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::CORBAModule::OTSource::_PD_repoId) )
    return 1;
  if( omni::ptrStrMatch(id, CORBAModule::OTNode::_PD_repoId) )
    return 1;


  return 0;
}

const CORBAModule::_pof_OTSource _the_pof_CORBAModule_mOTSource;

CORBAModule::_impl_OTSource::~_impl_OTSource() {}


CORBA::Boolean
CORBAModule::_impl_OTSource::_dispatch(omniCallHandle& _handle)
{
  

  
#ifndef _MSC_VER
  if( _impl_OTNode::_dispatch(_handle) ) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if( ((_impl_OTNode*)this)->
      _impl_OTNode::_dispatch(_handle) ) {
    return 1;
  }
#endif


  return 0;
}

void*
CORBAModule::_impl_OTSource::_ptrToInterface(const char* id)
{
  if( id == ::CORBAModule::OTSource::_PD_repoId )
    return (::CORBAModule::_impl_OTSource*) this;
  if( id == ::CORBAModule::OTNode::_PD_repoId )
    return (::CORBAModule::_impl_OTNode*) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::CORBAModule::OTSource::_PD_repoId) )
    return (::CORBAModule::_impl_OTSource*) this;
  if( omni::strMatch(id, ::CORBAModule::OTNode::_PD_repoId) )
    return (::CORBAModule::_impl_OTNode*) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
CORBAModule::_impl_OTSource::_mostDerivedRepoId()
{
  return ::CORBAModule::OTSource::_PD_repoId;
}

CORBAModule::OTSink_ptr CORBAModule::OTSink_Helper::_nil() {
  return ::CORBAModule::OTSink::_nil();
}

CORBA::Boolean CORBAModule::OTSink_Helper::is_nil(::CORBAModule::OTSink_ptr p) {
  return CORBA::is_nil(p);

}

void CORBAModule::OTSink_Helper::release(::CORBAModule::OTSink_ptr p) {
  CORBA::release(p);
}

void CORBAModule::OTSink_Helper::duplicate(::CORBAModule::OTSink_ptr p) {
  if( p && !p->_NP_is_nil() )  omni::duplicateObjRef(p);
}

void CORBAModule::OTSink_Helper::marshalObjRef(::CORBAModule::OTSink_ptr obj, cdrStream& s) {
  ::CORBAModule::OTSink::_marshalObjRef(obj, s);
}

CORBAModule::OTSink_ptr CORBAModule::OTSink_Helper::unmarshalObjRef(cdrStream& s) {
  return ::CORBAModule::OTSink::_unmarshalObjRef(s);
}

CORBAModule::OTSink_ptr
CORBAModule::OTSink::_duplicate(::CORBAModule::OTSink_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);

  return obj;
}


CORBAModule::OTSink_ptr
CORBAModule::OTSink::_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


CORBAModule::OTSink_ptr
CORBAModule::OTSink::_unchecked_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}


CORBAModule::OTSink_ptr
CORBAModule::OTSink::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_OTSink _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_OTSink* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_OTSink;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* CORBAModule::OTSink::_PD_repoId = "IDL:CORBAModule/OTSink:1.0";


CORBAModule::_objref_OTSink::~_objref_OTSink() {}


CORBAModule::_objref_OTSink::_objref_OTSink(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::CORBAModule::OTSink::_PD_repoId, ior, id, 1),
   OMNIORB_BASE_CTOR(CORBAModule::)_objref_OTNode(ior, id)
   
{
  _PR_setobj(this);
}

void*
CORBAModule::_objref_OTSink::_ptrToObjRef(const char* id)
{
  if( id == ::CORBAModule::OTSink::_PD_repoId )
    return (::CORBAModule::OTSink_ptr) this;
  if( id == ::CORBAModule::OTNode::_PD_repoId )
    return (::CORBAModule::OTNode_ptr) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::CORBAModule::OTSink::_PD_repoId) )
    return (::CORBAModule::OTSink_ptr) this;
  if( omni::strMatch(id, ::CORBAModule::OTNode::_PD_repoId) )
    return (::CORBAModule::OTNode_ptr) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

CORBAModule::_pof_OTSink::~_pof_OTSink() {}


omniObjRef*
CORBAModule::_pof_OTSink::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::CORBAModule::_objref_OTSink(ior, id);
}


CORBA::Boolean
CORBAModule::_pof_OTSink::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::CORBAModule::OTSink::_PD_repoId) )
    return 1;
  if( omni::ptrStrMatch(id, CORBAModule::OTNode::_PD_repoId) )
    return 1;


  return 0;
}

const CORBAModule::_pof_OTSink _the_pof_CORBAModule_mOTSink;

CORBAModule::_impl_OTSink::~_impl_OTSink() {}


CORBA::Boolean
CORBAModule::_impl_OTSink::_dispatch(omniCallHandle& _handle)
{
  

  
#ifndef _MSC_VER
  if( _impl_OTNode::_dispatch(_handle) ) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if( ((_impl_OTNode*)this)->
      _impl_OTNode::_dispatch(_handle) ) {
    return 1;
  }
#endif


  return 0;
}

void*
CORBAModule::_impl_OTSink::_ptrToInterface(const char* id)
{
  if( id == ::CORBAModule::OTSink::_PD_repoId )
    return (::CORBAModule::_impl_OTSink*) this;
  if( id == ::CORBAModule::OTNode::_PD_repoId )
    return (::CORBAModule::_impl_OTNode*) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::CORBAModule::OTSink::_PD_repoId) )
    return (::CORBAModule::_impl_OTSink*) this;
  if( omni::strMatch(id, ::CORBAModule::OTNode::_PD_repoId) )
    return (::CORBAModule::_impl_OTNode*) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
CORBAModule::_impl_OTSink::_mostDerivedRepoId()
{
  return ::CORBAModule::OTSink::_PD_repoId;
}

CORBAModule::Node_ptr CORBAModule::Node_Helper::_nil() {
  return ::CORBAModule::Node::_nil();
}

CORBA::Boolean CORBAModule::Node_Helper::is_nil(::CORBAModule::Node_ptr p) {
  return CORBA::is_nil(p);

}

void CORBAModule::Node_Helper::release(::CORBAModule::Node_ptr p) {
  CORBA::release(p);
}

void CORBAModule::Node_Helper::duplicate(::CORBAModule::Node_ptr p) {
  if( p && !p->_NP_is_nil() )  omni::duplicateObjRef(p);
}

void CORBAModule::Node_Helper::marshalObjRef(::CORBAModule::Node_ptr obj, cdrStream& s) {
  ::CORBAModule::Node::_marshalObjRef(obj, s);
}

CORBAModule::Node_ptr CORBAModule::Node_Helper::unmarshalObjRef(cdrStream& s) {
  return ::CORBAModule::Node::_unmarshalObjRef(s);
}

CORBAModule::Node_ptr
CORBAModule::Node::_duplicate(::CORBAModule::Node_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);

  return obj;
}


CORBAModule::Node_ptr
CORBAModule::Node::_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


CORBAModule::Node_ptr
CORBAModule::Node::_unchecked_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}


CORBAModule::Node_ptr
CORBAModule::Node::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_Node _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_Node* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_Node;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* CORBAModule::Node::_PD_repoId = "IDL:CORBAModule/Node:1.0";


CORBAModule::_objref_Node::~_objref_Node() {}


CORBAModule::_objref_Node::_objref_Node(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::CORBAModule::Node::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
CORBAModule::_objref_Node::_ptrToObjRef(const char* id)
{
  if( id == ::CORBAModule::Node::_PD_repoId )
    return (::CORBAModule::Node_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::CORBAModule::Node::_PD_repoId) )
    return (::CORBAModule::Node_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  void_i_cCORBAModule_mOTNode
class _0RL_cd_FAAEBF9858B03965_32000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_FAAEBF9858B03965_32000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall) {}
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  CORBAModule::OTNode_var arg_0_;
  CORBAModule::OTNode_ptr arg_0;
};

void _0RL_cd_FAAEBF9858B03965_32000000::marshalArguments(cdrStream& _n)
{
  CORBAModule::OTNode::_marshalObjRef(arg_0,_n);

}

void _0RL_cd_FAAEBF9858B03965_32000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = CORBAModule::OTNode::_unmarshalObjRef(_n);
  arg_0 = arg_0_.in();

}

// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_42000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_32000000* tcd = (_0RL_cd_FAAEBF9858B03965_32000000*)cd;
  CORBAModule::_impl_Node* impl = (CORBAModule::_impl_Node*) svnt->_ptrToInterface(CORBAModule::Node::_PD_repoId);
  impl->_cxx_register(tcd->arg_0);


}

void CORBAModule::_objref_Node::_cxx_register(OTNode_ptr node)
{
  _0RL_cd_FAAEBF9858B03965_32000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_42000000, "register", 9);
  _call_desc.arg_0 = node;

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_FAAEBF9858B03965_52000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_FAAEBF9858B03965_32000000* tcd = (_0RL_cd_FAAEBF9858B03965_32000000*)cd;
  CORBAModule::_impl_Node* impl = (CORBAModule::_impl_Node*) svnt->_ptrToInterface(CORBAModule::Node::_PD_repoId);
  impl->deregister(tcd->arg_0);


}

void CORBAModule::_objref_Node::deregister(OTNode_ptr node)
{
  _0RL_cd_FAAEBF9858B03965_32000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_52000000, "deregister", 11);
  _call_desc.arg_0 = node;

  _invoke(_call_desc);



}
CORBAModule::_pof_Node::~_pof_Node() {}


omniObjRef*
CORBAModule::_pof_Node::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::CORBAModule::_objref_Node(ior, id);
}


CORBA::Boolean
CORBAModule::_pof_Node::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::CORBAModule::Node::_PD_repoId) )
    return 1;
  
  return 0;
}

const CORBAModule::_pof_Node _the_pof_CORBAModule_mNode;

CORBAModule::_impl_Node::~_impl_Node() {}


CORBA::Boolean
CORBAModule::_impl_Node::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "register") ) {

    _0RL_cd_FAAEBF9858B03965_32000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_42000000, "register", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "deregister") ) {

    _0RL_cd_FAAEBF9858B03965_32000000 _call_desc(_0RL_lcfn_FAAEBF9858B03965_52000000, "deregister", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
CORBAModule::_impl_Node::_ptrToInterface(const char* id)
{
  if( id == ::CORBAModule::Node::_PD_repoId )
    return (::CORBAModule::_impl_Node*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::CORBAModule::Node::_PD_repoId) )
    return (::CORBAModule::_impl_Node*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
CORBAModule::_impl_Node::_mostDerivedRepoId()
{
  return ::CORBAModule::Node::_PD_repoId;
}

CORBAModule::Source_ptr CORBAModule::Source_Helper::_nil() {
  return ::CORBAModule::Source::_nil();
}

CORBA::Boolean CORBAModule::Source_Helper::is_nil(::CORBAModule::Source_ptr p) {
  return CORBA::is_nil(p);

}

void CORBAModule::Source_Helper::release(::CORBAModule::Source_ptr p) {
  CORBA::release(p);
}

void CORBAModule::Source_Helper::duplicate(::CORBAModule::Source_ptr p) {
  if( p && !p->_NP_is_nil() )  omni::duplicateObjRef(p);
}

void CORBAModule::Source_Helper::marshalObjRef(::CORBAModule::Source_ptr obj, cdrStream& s) {
  ::CORBAModule::Source::_marshalObjRef(obj, s);
}

CORBAModule::Source_ptr CORBAModule::Source_Helper::unmarshalObjRef(cdrStream& s) {
  return ::CORBAModule::Source::_unmarshalObjRef(s);
}

CORBAModule::Source_ptr
CORBAModule::Source::_duplicate(::CORBAModule::Source_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);

  return obj;
}


CORBAModule::Source_ptr
CORBAModule::Source::_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


CORBAModule::Source_ptr
CORBAModule::Source::_unchecked_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}


CORBAModule::Source_ptr
CORBAModule::Source::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_Source _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_Source* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_Source;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* CORBAModule::Source::_PD_repoId = "IDL:CORBAModule/Source:1.0";


CORBAModule::_objref_Source::~_objref_Source() {}


CORBAModule::_objref_Source::_objref_Source(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::CORBAModule::Source::_PD_repoId, ior, id, 1),
   OMNIORB_BASE_CTOR(CORBAModule::)_objref_Node(ior, id)
   
{
  _PR_setobj(this);
}

void*
CORBAModule::_objref_Source::_ptrToObjRef(const char* id)
{
  if( id == ::CORBAModule::Source::_PD_repoId )
    return (::CORBAModule::Source_ptr) this;
  if( id == ::CORBAModule::Node::_PD_repoId )
    return (::CORBAModule::Node_ptr) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::CORBAModule::Source::_PD_repoId) )
    return (::CORBAModule::Source_ptr) this;
  if( omni::strMatch(id, ::CORBAModule::Node::_PD_repoId) )
    return (::CORBAModule::Node_ptr) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

CORBAModule::_pof_Source::~_pof_Source() {}


omniObjRef*
CORBAModule::_pof_Source::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::CORBAModule::_objref_Source(ior, id);
}


CORBA::Boolean
CORBAModule::_pof_Source::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::CORBAModule::Source::_PD_repoId) )
    return 1;
  if( omni::ptrStrMatch(id, CORBAModule::Node::_PD_repoId) )
    return 1;


  return 0;
}

const CORBAModule::_pof_Source _the_pof_CORBAModule_mSource;

CORBAModule::_impl_Source::~_impl_Source() {}


CORBA::Boolean
CORBAModule::_impl_Source::_dispatch(omniCallHandle& _handle)
{
  

  
#ifndef _MSC_VER
  if( _impl_Node::_dispatch(_handle) ) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if( ((_impl_Node*)this)->
      _impl_Node::_dispatch(_handle) ) {
    return 1;
  }
#endif


  return 0;
}

void*
CORBAModule::_impl_Source::_ptrToInterface(const char* id)
{
  if( id == ::CORBAModule::Source::_PD_repoId )
    return (::CORBAModule::_impl_Source*) this;
  if( id == ::CORBAModule::Node::_PD_repoId )
    return (::CORBAModule::_impl_Node*) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::CORBAModule::Source::_PD_repoId) )
    return (::CORBAModule::_impl_Source*) this;
  if( omni::strMatch(id, ::CORBAModule::Node::_PD_repoId) )
    return (::CORBAModule::_impl_Node*) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
CORBAModule::_impl_Source::_mostDerivedRepoId()
{
  return ::CORBAModule::Source::_PD_repoId;
}

CORBAModule::Sink_ptr CORBAModule::Sink_Helper::_nil() {
  return ::CORBAModule::Sink::_nil();
}

CORBA::Boolean CORBAModule::Sink_Helper::is_nil(::CORBAModule::Sink_ptr p) {
  return CORBA::is_nil(p);

}

void CORBAModule::Sink_Helper::release(::CORBAModule::Sink_ptr p) {
  CORBA::release(p);
}

void CORBAModule::Sink_Helper::duplicate(::CORBAModule::Sink_ptr p) {
  if( p && !p->_NP_is_nil() )  omni::duplicateObjRef(p);
}

void CORBAModule::Sink_Helper::marshalObjRef(::CORBAModule::Sink_ptr obj, cdrStream& s) {
  ::CORBAModule::Sink::_marshalObjRef(obj, s);
}

CORBAModule::Sink_ptr CORBAModule::Sink_Helper::unmarshalObjRef(cdrStream& s) {
  return ::CORBAModule::Sink::_unmarshalObjRef(s);
}

CORBAModule::Sink_ptr
CORBAModule::Sink::_duplicate(::CORBAModule::Sink_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);

  return obj;
}


CORBAModule::Sink_ptr
CORBAModule::Sink::_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


CORBAModule::Sink_ptr
CORBAModule::Sink::_unchecked_narrow(CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}


CORBAModule::Sink_ptr
CORBAModule::Sink::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_Sink _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_Sink* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_Sink;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* CORBAModule::Sink::_PD_repoId = "IDL:CORBAModule/Sink:1.0";


CORBAModule::_objref_Sink::~_objref_Sink() {}


CORBAModule::_objref_Sink::_objref_Sink(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::CORBAModule::Sink::_PD_repoId, ior, id, 1),
   OMNIORB_BASE_CTOR(CORBAModule::)_objref_Node(ior, id)
   
{
  _PR_setobj(this);
}

void*
CORBAModule::_objref_Sink::_ptrToObjRef(const char* id)
{
  if( id == ::CORBAModule::Sink::_PD_repoId )
    return (::CORBAModule::Sink_ptr) this;
  if( id == ::CORBAModule::Node::_PD_repoId )
    return (::CORBAModule::Node_ptr) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::CORBAModule::Sink::_PD_repoId) )
    return (::CORBAModule::Sink_ptr) this;
  if( omni::strMatch(id, ::CORBAModule::Node::_PD_repoId) )
    return (::CORBAModule::Node_ptr) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

CORBAModule::_pof_Sink::~_pof_Sink() {}


omniObjRef*
CORBAModule::_pof_Sink::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::CORBAModule::_objref_Sink(ior, id);
}


CORBA::Boolean
CORBAModule::_pof_Sink::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::CORBAModule::Sink::_PD_repoId) )
    return 1;
  if( omni::ptrStrMatch(id, CORBAModule::Node::_PD_repoId) )
    return 1;


  return 0;
}

const CORBAModule::_pof_Sink _the_pof_CORBAModule_mSink;

CORBAModule::_impl_Sink::~_impl_Sink() {}


CORBA::Boolean
CORBAModule::_impl_Sink::_dispatch(omniCallHandle& _handle)
{
  

  
#ifndef _MSC_VER
  if( _impl_Node::_dispatch(_handle) ) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if( ((_impl_Node*)this)->
      _impl_Node::_dispatch(_handle) ) {
    return 1;
  }
#endif


  return 0;
}

void*
CORBAModule::_impl_Sink::_ptrToInterface(const char* id)
{
  if( id == ::CORBAModule::Sink::_PD_repoId )
    return (::CORBAModule::_impl_Sink*) this;
  if( id == ::CORBAModule::Node::_PD_repoId )
    return (::CORBAModule::_impl_Node*) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::CORBAModule::Sink::_PD_repoId) )
    return (::CORBAModule::_impl_Sink*) this;
  if( omni::strMatch(id, ::CORBAModule::Node::_PD_repoId) )
    return (::CORBAModule::_impl_Node*) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
CORBAModule::_impl_Sink::_mostDerivedRepoId()
{
  return ::CORBAModule::Sink::_PD_repoId;
}

POA_CORBAModule::Event::~Event() {}

POA_CORBAModule::OTNode::~OTNode() {}

POA_CORBAModule::OTSource::~OTSource() {}

POA_CORBAModule::OTSink::~OTSink() {}

POA_CORBAModule::Node::~Node() {}

POA_CORBAModule::Source::~Source() {}

POA_CORBAModule::Sink::~Sink() {}

